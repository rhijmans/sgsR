[{"path":"/articles/calculating.html","id":"rep","dir":"Articles","previous_headings":"","what":"calculate_representation()","title":"calculating","text":"calculate_representation() function allows users verify well stratification represented existing sample networks. Users input sraster existing samples calculate_representation() function, result tabular graphical (plot = TRUE) outputs compare strata coverage frequency sampling frequency.  tabular output presents frequency coverage strata (srasterFreq) (% landscape strata cover) sampling frequency within strata (sampleFreq) (% total existing samples strata). difference (diffFreq) coverage frequency sampling frequency determines whether values -represented (positive numbers) -represented (negative numbers). value translates discrete need attribute defines whether need add remove samples meet number samples necessary considered representative strata inputted sraster. Performing algorithm sample set derived using sample_strat() exhibits proportional sampling strata coverage.  Presence small (negligible) differences srasterFreq sampleFreq common. situations, important user determine whether add remove samples.","code":"#--- calculate representation ---# calculate_representation(sraster = sraster,                           existing = existing,                           plot = TRUE) #> # A tibble: 4 x 6 #>   strata srasterFreq sampleFreq diffFreq nSamp  need #>    <dbl>       <dbl>      <dbl>    <dbl> <int> <dbl> #> 1      1        0.21       0.18  -0.03      36     6 #> 2      2        0.16       0.17   0.0100    35    -3 #> 3      3        0.26       0.22  -0.04      43     9 #> 4      4        0.38       0.43   0.05      86   -10 #--- stratified samples ---# strat <- sample_strat(sraster = sraster,                       nSamp = 200)  calculate_representation(sraster = sraster,                          existing = strat,                          plot = TRUE) #> # A tibble: 4 x 6 #>   strata srasterFreq sampleFreq diffFreq nSamp  need #>    <dbl>       <dbl>      <dbl>    <dbl> <int> <dbl> #> 1      1        0.21       0.21        0    42     1 #> 2      2        0.16       0.16        0    32     1 #> 3      3        0.26       0.26        0    52     1 #> 4      4        0.38       0.38        0    76     1"},{"path":"/articles/calculating.html","id":"dist","dir":"Articles","previous_headings":"","what":"calculate_distance","title":"calculating","text":"calculate_distance() function takes input raster access data outputs per pixel distance nearest access point. function specific value constraining sampling protocols, sample_clhs() function, output raster layer can used cost constraint. output raster consists input appended calculated distance layer (dist2access).  Access network polygons large number features /large spatial extent result slow processing times.","code":"calculate_distance(raster = sraster, # input                    access = access, # define access road network                    plot = TRUE) # plot #> class       : SpatRaster  #> dimensions  : 277, 373, 2  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               memory   #> names       :      strata, dist2access  #> min values  : 1.000000000, 0.006621213  #> max values  :        4.00,     1061.66"},{"path":"/articles/calculating.html","id":"calculate_pcomp","dir":"Articles","previous_headings":"","what":"calculate_pcomp","title":"calculating","text":"calculate_pcomp() function takes mraster input performs principal component analysis. number components defined nComp parameter specifies number components rasterized onto output.","code":"calculate_pcomp(mraster = mraster, # input                 nComp = 3, # number of components to output                 plot = TRUE, # plot                 details = TRUE) # details about the principal component analysis appended #> $pca #> Standard deviations (1, .., p=3): #> [1] 1.5479878 0.7359109 0.2493371 #>  #> Rotation (n x k) = (3 x 3): #>                PC1        PC2        PC3 #> zq90     0.6286296 -0.1795433 -0.7566961 #> pzabove2 0.5104140  0.8293596  0.2272450 #> zsd      0.5867729 -0.5290812  0.6130014 #>  #> $raster #> class       : SpatRaster  #> dimensions  : 277, 373, 3  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               memory   #>               memory   #> names       :       PC1,       PC2,       PC3  #> min values  : -4.402269, -5.357801, -1.446156  #> max values  :  5.282663,  2.155242,  1.510955"},{"path":"/articles/calculating.html","id":"calculate_sampsize","dir":"Articles","previous_headings":"","what":"calculate_sampsize","title":"calculating","text":"calculate_sampsize() function allows user estimate appropriate sample size using relative standard error (rse) input metrics. input mraster contains multiple layers, sample sizes determined layers. plot = TRUE rse defined, sequence rse values visualized indicators values matching sample size.","code":"#--- determine sample size based on relative standard error (rse) of 1% ---# calculate_sampsize(mraster = mraster,                    rse = 0.01) #>   nSamp  rse      var #> 1  1394 0.01     zq90 #> 2  1341 0.01 pzabove2 #> 3  1859 0.01      zsd #--- change default threshold sequence values ---#  #--- if increment and rse are not divisible the closest value will be taken ---# p <- calculate_sampsize(mraster = mraster,                    rse = 0.025,                    start = 0.01,                    end = 0.08,                    increment = 0.01,                    plot = TRUE) #> 'rse' not perfectly divisible by 'incremenent.  #> Selecting closest sample size (rse = 0.03) based on values.  p #> $nSamp #> # A tibble: 3 x 3 #> # Groups:   var [3] #>   nSamp   rse var      #>   <dbl> <dbl> <chr>    #> 1   157  0.03 zq90     #> 2   151  0.03 pzabove2 #> 3   211  0.03 zsd      #>  #> $plot"},{"path":"/articles/calculating.html","id":"calculate_allocation","dir":"Articles","previous_headings":"","what":"calculate_allocation","title":"calculating","text":"calculate_allocation() function determines allocate samples based desired number samples (nSamp) input sraster. function used internally number functions, including sample_strat. Currently, three methods allocations included: proportional (prop; default), optimal (optim), equal (equal) allocation. Proportional - Samples allocated based coverage area strata. default allocation method. Optimal - Samples allocated based variation within strata. Equal - number samples ( defined nSamp) allocated strata.","code":""},{"path":"/articles/calculating.html","id":"proportional","dir":"Articles","previous_headings":"calculate_allocation","what":"Proportional allocation","title":"calculating","text":"Notice values total result negative. negative value indicates existing samples represent strata samples removed prevent -representation. $total indicates number samples added removed.","code":"#--- perform grid sampling ---# calculate_allocation(sraster = sraster,                       nSamp = 200) #>   strata total #> 1      1    42 #> 2      2    32 #> 3      3    52 #> 4      4    76 #--- calculate existing samples to include ---# e.sr <- extract_strata(sraster = sraster,                         existing = existing)  calculate_allocation(sraster = sraster,                       nSamp = 200,                       existing = e.sr) #>   strata total need #> 1      1     6   42 #> 2      2    -3   32 #> 3      3     9   52 #> 4      4   -10   76"},{"path":"/articles/calculating.html","id":"optimal","dir":"Articles","previous_headings":"calculate_allocation","what":"Optimal Allocation","title":"calculating","text":"Optimal allocation method uses variation within strata metric allocate samples. means addition providing sraster, specific metric (mraster) must provided calculate variation optimally allocate samples.","code":"calculate_allocation(sraster = sraster, # stratified raster                      nSamp = 200, # desired sample number                      existing = e.sr, #existing samples                      allocation = \"optim\", # optimal allocation                      mraster = mraster$zq90, # metric raster                      force = TRUE) # force nSamp number #>   strata total need #> 1      1    16   54 #> 2      2     3   38 #> 3      3     6   49 #> 4      4   -25   61"},{"path":"/articles/calculating.html","id":"equal","dir":"Articles","previous_headings":"calculate_allocation","what":"Equal allocation","title":"calculating","text":"may situations user wants number samples allocated strata. situations use allocation = equal. case, nSamp refers total number samples per strata, instead overall total number samples. code demonstration yields total 80 samples (20 nSamp 4 strata sraster).","code":"calculate_allocation(sraster = sraster, # stratified raster                      nSamp = 20, # desired sample number                      allocation = \"equal\") # optimal allocation #> # A tibble: 4 x 2 #>   strata total #>    <dbl> <dbl> #> 1      1    20 #> 2      2    20 #> 3      3    20 #> 4      4    20"},{"path":"/articles/calculating.html","id":"sampeval","dir":"Articles","previous_headings":"","what":"Sample evaluation algorithms","title":"calculating","text":"following algorithms initially developed Dr. Brendan Malone University Sydney. Dr. Brendan Malone colleagues graciously supplied depth description functionality algorithms, originally developed improve soil sampling strategies. functions modified implemented used structurally guided sampling approaches. Many thanks Dr. Malone excellent collaboration proponent open source algorithms. Please consult original reference scripts ideas paper holds extremely helpful valuable information understand rationale sampling algorithm development. Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":"/articles/calculating.html","id":"coobs","dir":"Articles","previous_headings":"Sample evaluation algorithms","what":"calculate_coobs","title":"calculating","text":"calculate_coobs() function performs COunt OBServations (coobs) algorithm using existing sample data mraster covariates. algorithm helps user understand existing sample data set distributed among landscape relation mraster covariates. output coobs raster can used constrain clhs sampling using sample_clhs() function areas -represented. coobs raster determines many observations similar terms covariate space every pixel. function takes advantage parallel processing routines.","code":"calculate_coobs(mraster = mraster, # input                 existing = existing, # existing samples                 cores = 4, # parallel cores to use                 details = TRUE, # provide details from algorithm output                 plot = TRUE, # plot                 filename = tempfile(fileext = \".tif\")) # write output raster to tif"},{"path":"/articles/calculating.html","id":"lhseval","dir":"Articles","previous_headings":"","what":"Latin hypercube sampling evaluation algorithms","title":"calculating","text":"following 2 algorithms presents means maximize effectiveness latin hypercube sampling protocols.","code":""},{"path":"/articles/calculating.html","id":"lhspop","dir":"Articles","previous_headings":"Latin hypercube sampling evaluation algorithms","what":"calculate_pop","title":"calculating","text":"calculate_pop() function calculates population level statistics mraster covariates used, includes calculating principal components, quantile & covariate distributions, Kullback-Leibler divergence testing. outputs produced functions required use calculate_lhsOpt() function described following section. Additionally, algorithm can pre-emptively used calculate matQ MatCov, two values used sample_ahels() function. save processing time sampling. output list contains following: $values - Pixel values mraster $pcaLoad - PCA loadings $matQ - Quantile matrix $matCov - Covariate matrix","code":"#--- by default all statistical data are calculated ---# calculate_pop(mraster = mraster) # input #--- statistical analyses can be chosen by setting their parameter to `FALSE` ---# mat <- calculate_pop(mraster = mraster, # input                      nQuant = 10) # desired number of quantiles  #--- use matrix output within sample ahels algorithm ---# sample_ahels(mraster = mraster,               existing = existing,               nQuant = 10,               nSamp = 50,              matCov = mat)"},{"path":"/articles/calculating.html","id":"lhsopt","dir":"Articles","previous_headings":"Latin hypercube sampling evaluation algorithms","what":"calculate_lhsOpt","title":"calculating","text":"calculate_lhsOpt() function performs bootstrapped latin hypercube sampling approach population level analysis mraster data performed determine optimal latin hypercube sample size. Using data calculated using calculate_pop() varying sample sizes defined minSamp, maxSamp, step rep. Sampling protocols conducted statistical effectiveness sampling outcomes evaluated determine sample size minimized statistical representation maximized.","code":"#--- calculate lhsPop details ---# poplhs <- calculate_pop(mraster = mr)  calculate_lhsOpt(popLHS = poplhs) calculate_lhsOpt(popLHS = poplhs,                   PCA = FALSE,                   iter = 200)"},{"path":"/articles/sampling.html","id":"access","dir":"Articles","previous_headings":"","what":"Access","title":"sampling","text":"One key feature using sample_* functions ability define access corridors. Users can supply road access network (must sf line objects) define buffers around access samples excluded included. Relevant applicable parameters access defined : buff_inner - Inner buffer parameter defines distance access samples taken (.e. don’t want samples within 50 m access layer set buff_inner = 50). buff_outer - Outer buffer parameter defines maximum distance samples can located access (.e. don’t want samples 200 meters access layer set buff_inner = 200).","code":""},{"path":"/articles/sampling.html","id":"srs","dir":"Articles","previous_headings":"","what":"sample_srs","title":"sampling","text":"demonstrated simple example using sample_srs() function vignette(\"sgsR\"). demonstrate additional examples . input required sample_srs() raster. means sraster mraster supported function.","code":"#--- perform simple random sampling ---# sample_srs(raster = sraster, # input sraster            nSamp = 200, # number of desired samples            plot = TRUE) # plot #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337730 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (435010 5338330) #> 2  POINT (435010 5338330) #> 3  POINT (435810 5340210) #> 4  POINT (432190 5338730) #> 5  POINT (436570 5341270) #> 6  POINT (431970 5341810) #> 7  POINT (432870 5342570) #> 8  POINT (434750 5338670) #> 9  POINT (434570 5340110) #> 10 POINT (437010 5340290) sample_srs(raster = mraster, # input mraster            nSamp = 200, # number of desired samples            access = access, # define access road network            mindist = 200, # minimum distance samples must be apart from one another            buff_inner = 50, # inner buffer - no samples within this distance from road            buff_outer = 200, # outer buffer - no samples further than this distance from road            plot = TRUE) # plot #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431150 ymin: 5337710 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (434030 5342970) #> 2  POINT (438410 5339210) #> 3  POINT (436170 5339210) #> 4  POINT (437990 5339330) #> 5  POINT (432950 5340670) #> 6  POINT (431250 5340590) #> 7  POINT (437590 5343230) #> 8  POINT (434590 5341930) #> 9  POINT (436090 5339830) #> 10 POINT (435450 5341970)"},{"path":"/articles/sampling.html","id":"systematic","dir":"Articles","previous_headings":"","what":"sample_systematic","title":"sampling","text":"sample_systematic() function applies systematic sampling across area cellsize parameter defining resolution tessellation. tessellation shape can modified using square parameter. Assigning TRUE (default) square parameter results regular grid assigning FALSE results hexagonal grid. location samples can also adjusted using locations parameter, centers takes center, corners takes corners, random takes random location within tessellation.","code":"#--- perform grid sampling ---# sample_systematic(raster = sraster, # input sraster                   cellsize = 1000, # grid distance                   plot = TRUE) # plot #> Simple feature collection with 40 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431600 ymin: 5338200 xmax: 437600 ymax: 5343200 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431600 5338200) #> 2  POINT (432600 5338200) #> 3  POINT (433600 5338200) #> 4  POINT (434600 5338200) #> 5  POINT (435600 5338200) #> 6  POINT (436600 5338200) #> 7  POINT (437600 5338200) #> 8  POINT (432600 5339200) #> 9  POINT (433600 5339200) #> 10 POINT (434600 5339200) #--- perform grid sampling ---# sample_systematic(raster = sraster, # input sraster                   cellsize = 500, # grid distance                   square = FALSE, # hexagonal tessellation                   location = \"random\", # random sample within tessellation                   plot = TRUE) # plot #> Simple feature collection with 161 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431160.2 ymin: 5337727 xmax: 438550.9 ymax: 5343237 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                    geometry #> 1  POINT (431274.4 5341163) #> 2  POINT (431166.7 5338137) #> 3    POINT (431294 5339830) #> 4  POINT (431530.4 5340824) #> 5  POINT (431160.2 5341564) #> 6    POINT (431329 5342621) #> 7  POINT (431665.8 5337860) #> 8    POINT (431592 5338587) #> 9    POINT (431506 5340448) #> 10 POINT (431487.7 5341168) sample_systematic(raster = sraster, # input sraster             cellsize = 500, # grid distance             access = access, # define access road network             buff_inner = 50, # inner buffer - no samples within this distance from road             buff_outer = 200, # outer buffer - no samples further than this distance from road             square = FALSE, # hexagonal tessellation             location = \"corners\", # take corners instead of centers             plot = TRUE) #> Simple feature collection with 470 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337844 xmax: 438350 ymax: 5343185 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431100 5340875) #> 2  POINT (431100 5340587) #> 3  POINT (431100 5340587) #> 4  POINT (431350 5340442) #> 5  POINT (431100 5340875) #> 6  POINT (431100 5340875) #> 7  POINT (431350 5342752) #> 8  POINT (431350 5340442) #> 9  POINT (431100 5340587) #> 10 POINT (431100 5340875)"},{"path":"/articles/sampling.html","id":"sstrat","dir":"Articles","previous_headings":"","what":"sample_strat","title":"sampling","text":"sample_strat() function contains hierarchical sampling algorithm, originally developed Martin Queinnec. Queinnec, M., White, J. C., & Coops, N. C. (2021). Comparing airborne spaceborne photon-counting LiDAR canopy structural estimates across different boreal forest types. Remote Sensing Environment, 262(August 2020), 112510. algorithm uses moving window (wrow wcol parameters) filter input sraster prioritize sample locations stratum pixels spatially grouped, rather dispersed individuals across landscape. Sampling performed using 2 rules: Rule 1 - Sample within spatially grouped stratum pixels. Moving window defined wrow wcol. Rule 2 - samples exist satisfy desired sampling count, individual stratum pixels sampled. rule applied select particular sample defined rule attribute output samples. give examples :  cases, users might want include existing samples within algorithm. order adjust total number samples needed per stratum reflect already present existing, can use intermediate function extract_strata(). function uses sraster existing samples extracts stratum . samples can included within sample_strat(), adjusts total samples required per class based representation existing. Notice e.sr now attribute named strata. parameter , sample_strat() give error.  seen code example , defined mindist parameter specifies minimum euclidean distance samples must apart one another. Notice sample outputs type rule attributes outline whether samples existing new whether rule1 rule2 used select individual samples.  include parameter determines whether existing samples included total count samples defined nSamp. default, include parameter set FALSE.","code":"#--- perform stratified sampling random sampling ---# sample_strat(sraster = sraster, # input sraster              nSamp = 200, # desired sample number              plot = TRUE) # plot #> Simple feature collection with 202 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431210 ymin: 5337830 xmax: 438530 ymax: 5343190 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata type  rule               geometry #> x       1  new rule1 POINT (435370 5342270) #> x1      1  new rule1 POINT (434050 5340810) #> x2      1  new rule1 POINT (437970 5341310) #> x3      1  new rule1 POINT (437930 5342930) #> x4      1  new rule1 POINT (434690 5341710) #> x5      1  new rule1 POINT (433070 5341610) #> x6      1  new rule1 POINT (437930 5338210) #> x7      1  new rule1 POINT (436890 5338130) #> x8      1  new rule1 POINT (437690 5342790) #> x9      1  new rule1 POINT (437790 5343170) #--- extract strata values to existing samples ---#               e.sr <- extract_strata(sraster = sraster, # input sraster                        existing = existing) # existing samples to add strata value to  e.sr #> Simple feature collection with 200 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343190 #> Projected CRS: UTM Zone 17, Northern Hemisphere #> First 10 features: #>    strata               geometry #> 1       2 POINT (437910 5342530) #> 2       3 POINT (437150 5341130) #> 3       3 POINT (433590 5342410) #> 4       2 POINT (437590 5337870) #> 5       2 POINT (437930 5338610) #> 6       2 POINT (436210 5339450) #> 7       2 POINT (435090 5339670) #> 8       1 POINT (434150 5341650) #> 9       4 POINT (434170 5342190) #> 10      4 POINT (435990 5340450) sample_strat(sraster = sraster, # input sraster              nSamp = 200, # desired sample number              access = access, # define access road network              existing = e.sr, # existing samples with strata values              mindist = 200, # minimum distance samples must be apart from one another              buff_inner = 50, # inner buffer - no samples within this distance from road              buff_outer = 200, # outer buffer - no samples further than this distance from road              plot = TRUE) # plot #> Simple feature collection with 402 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata     type     rule               geometry #> 8       1 existing existing POINT (434150 5341650) #> 13      1 existing existing POINT (433790 5341390) #> 15      1 existing existing POINT (436570 5337770) #> 16      1 existing existing POINT (436090 5342950) #> 23      1 existing existing POINT (438550 5340230) #> 33      1 existing existing POINT (434550 5339990) #> 36      1 existing existing POINT (437750 5343070) #> 40      1 existing existing POINT (431170 5340550) #> 47      1 existing existing POINT (432010 5341530) #> 53      1 existing existing POINT (438430 5340610) sample_strat(sraster = sraster, # input              nSamp = 200, # desired sample number              access = access, # define access road network              existing = e.sr, # existing samples with strata values              include = TRUE, # include existing plots in nSamp total              buff_inner = 50, # inner buffer - no samples within this distance from road              buff_outer = 200, # outer buffer - no samples further than this distance from road              filename = tempfile(fileext = \".shp\"), # write output samples to file              plot = TRUE) # plot #> Writing layer `file51481c4d26d5' to data source  #>   `C:\\Users\\goodb\\AppData\\Local\\Temp\\RtmpITMJmu\\file51481c4d26d5.shp' using driver `ESRI Shapefile' #> Writing 203 features with 3 fields and geometry type Point. #> Simple feature collection with 203 features and 3 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343190 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    strata     type     rule               geometry #> 8       1 existing existing POINT (434150 5341650) #> 13      1 existing existing POINT (433790 5341390) #> 15      1 existing existing POINT (436570 5337770) #> 16      1 existing existing POINT (436090 5342950) #> 23      1 existing existing POINT (438550 5340230) #> 33      1 existing existing POINT (434550 5339990) #> 36      1 existing existing POINT (437750 5343070) #> 40      1 existing existing POINT (431170 5340550) #> 47      1 existing existing POINT (432010 5341530) #> 53      1 existing existing POINT (438430 5340610)"},{"path":"/articles/sampling.html","id":"clhs","dir":"Articles","previous_headings":"","what":"sample_clhs","title":"sampling","text":"sample_clhs() function implements conditioned Latin hypercube (clhs) sampling methodology clhs package. number functions sgsR package help provide guidance clhs sampling including calculate_pop() calculate_lhsOpt(). Check functions better understand sample numbers optimized. syntax function similar others shown , although parameters like iter, define number iterations within Metropolis-Hastings process important consider. examples use low iter value takes less time run. Default values iter within clhs package 10,000.   cost parameter defines mraster covariate, used constrain clhs sampling. number variables. example distance pixel road access (e.g. calculate_distance() see example ), terrain slope, output calculate_coobs(), many others.","code":"sample_clhs(mraster = mraster, # input             nSamp = 200, # desired sample number             plot = TRUE, # plot              iter = 100) # number of iterations sample_clhs(mraster = mraster, # input             nSamp = 300, # desired sample number             iter = 100, # number of iterations             existing = existing, # existing samples             access = access, # define access road network             buff_inner = 100, # inner buffer - no samples within this distance from road             buff_outer = 300, # outer buffer - no samples further than this distance from road             plot = TRUE) # plot #--- cost constrained examples ---# #--- calculate distance to access layer for each pixel in mr ---# mr.c <- calculate_distance(raster = mraster, # input                            access = access,                            plot = TRUE) # define access road network sample_clhs(mraster = mr.c, # input             nSamp = 250, # desired sample number             iter = 100, # number of iterations             cost = \"dist2access\", # cost parameter - name defined in calculate_distance()             plot = TRUE) # plot"},{"path":"/articles/sampling.html","id":"balanced","dir":"Articles","previous_headings":"","what":"sample_balanced","title":"sampling","text":"sample_balanced() algorithm performs balanced sampling methodology stratifyR / SamplingBigData packages.","code":"sample_balanced(mraster = mraster, # input                 nSamp = 200, # desired sample number                 plot = TRUE) # plot #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343110 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (434290 5343110) #> 2  POINT (433550 5342990) #> 3  POINT (433890 5342970) #> 4  POINT (431650 5342930) #> 5  POINT (434110 5342850) #> 6  POINT (434510 5342850) #> 7  POINT (436550 5342810) #> 8  POINT (437170 5342810) #> 9  POINT (434230 5342790) #> 10 POINT (431190 5342750) sample_balanced(mraster = mraster, # input                 nSamp = 100, # desired sample number                 algorithm = \"lcube\", # algorithm type                 access = access, # define access road network                 buff_inner = 50, # inner buffer - no samples within this distance from road                 buff_outer = 200) # outer buffer - no samples further than this distance from road #> Simple feature collection with 100 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431130 ymin: 5337750 xmax: 438510 ymax: 5343190 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (435230 5341910) #> 2  POINT (438170 5340090) #> 3  POINT (435970 5342110) #> 4  POINT (431950 5337990) #> 5  POINT (438330 5337870) #> 6  POINT (437370 5341870) #> 7  POINT (436390 5340870) #> 8  POINT (433270 5342370) #> 9  POINT (433950 5341030) #> 10 POINT (434710 5338730)"},{"path":"/articles/sampling.html","id":"ahels","dir":"Articles","previous_headings":"","what":"sample_ahels","title":"sampling","text":"sample_ahels() function performs adapted Hypercube Evaluation Legacy Sample (ahels) algorithm usingexisting sample data mraster. New samples allocated based quantile ratios existing sample mraster covariate dataset. algorithm adapted presented paper , highly recommend. Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451 algorithm: Determines quantile distributions existing samples mraster covariates. Determines quantiles disparity samples covariates. Prioritizes sampling within quantile improve representation. use function, user must first specify number quantiles (nQuant) followed either nSamp (total number desired samples added) threshold (sampling ratio vs. covariate coverage ratio quantiles - default 0.9) parameters. recommended setting threshold values 0.9.  Notice threshold, nSamp, nQuant defined. default setting threshold = 0.9 nQuant = 10. first matrix output shows quantile ratios sample covariates. value 1.0 indicates samples represented relative quantile coverage. Values > 1.0 indicate representation samples, < 1.0 indicate representation samples.  Notice total number samples 500. value sum existing samples (200) number samples defined nSamp = 300.","code":"sample_ahels(mraster = mraster,               existing = existing, # existing samples              plot = TRUE) # plot #> Simple feature collection with 272 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        type  zq90 pzabove2  zsd               geometry #> 1  existing 10.80     13.8 2.97 POINT (437910 5342530) #> 2  existing 20.00     83.9 3.75 POINT (437150 5341130) #> 3  existing 19.70     67.7 4.30 POINT (433590 5342410) #> 4  existing 13.80     91.9 3.82 POINT (437590 5337870) #> 5  existing  9.11     84.5 2.39 POINT (437930 5338610) #> 6  existing 14.10     75.2 3.53 POINT (436210 5339450) #> 7  existing 13.30     19.5 3.37 POINT (435090 5339670) #> 8  existing  4.82     53.4 1.22 POINT (434150 5341650) #> 9  existing 16.80     95.0 1.90 POINT (434170 5342190) #> 10 existing 15.70     94.2 3.24 POINT (435990 5340450) sample_ahels(mraster = mraster,               existing = existing, # existing samples              nQuant = 20, # define 20 quantiles              nSamp = 300, # total samples desired              filename = tempfile(fileext = \".shp\")) # write samples to disc #> Simple feature collection with 500 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        type  zq90 pzabove2  zsd               geometry #> 1  existing 10.80     13.8 2.97 POINT (437910 5342530) #> 2  existing 20.00     83.9 3.75 POINT (437150 5341130) #> 3  existing 19.70     67.7 4.30 POINT (433590 5342410) #> 4  existing 13.80     91.9 3.82 POINT (437590 5337870) #> 5  existing  9.11     84.5 2.39 POINT (437930 5338610) #> 6  existing 14.10     75.2 3.53 POINT (436210 5339450) #> 7  existing 13.30     19.5 3.37 POINT (435090 5339670) #> 8  existing  4.82     53.4 1.22 POINT (434150 5341650) #> 9  existing 16.80     95.0 1.90 POINT (434170 5342190) #> 10 existing 15.70     94.2 3.24 POINT (435990 5340450)"},{"path":"/articles/sgsR.html","id":"str","dir":"Articles","previous_headings":"","what":"Algorithm structure","title":"sgsR","text":"sgsR primarily scripted using tidyverse, terra package handle raster processing, sf package vector manipulation. Currently, 4 primary function verbs package uses: strat_* - Stratify verb directs functions apply stratification algorithms input metrics raster mraster produce stratified raster sraster output. sample_* - Sample verb directs functions extract samples srasters, produced strat_* functions. algorithms (sample_srs(), sample_balanced(), sample_systematic()) capable using mrasters input algorithms depend stratified inputs sampling. calculate_* - Calculate verb directs functions perform calculations; values derived calculations used subsequent processing. Predefined sample analysis algorithms (calculate_representation(), calculate_coobs()) included. extract_* - Derive raster data co-located sample. Includes extract_metrics() deriving mraster data, extract_strata() deriving stratum srasters. functions used internally within sgsR.","code":""},{"path":"/articles/sgsR.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"sgsR","text":"demonstrate provide examples functions using sgsR internal data. Use following code load data mraster road access. Follow along device explore different outputs better comprehend package functions.","code":""},{"path":"/articles/sgsR.html","id":"mrast","dir":"Articles","previous_headings":"Example data","what":"Metrics rasters - mraster","title":"sgsR","text":"","code":"library(sgsR) library(terra) library(sf)  #--- Load mraster from internal data ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\")  #--- load mraster using the terra package ---# mraster <- terra::rast(r)"},{"path":"/articles/sgsR.html","id":"vect","dir":"Articles","previous_headings":"Example data","what":"Road access data","title":"sgsR","text":"plot output see first band (zq90) mraster access vector overlaid.","code":"a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\")  #--- load the access vector using the sf package ---# access <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere terra::plot(mraster[[1]]) terra::plot(access, add = TRUE, col = \"black\")"},{"path":"/articles/sgsR.html","id":"srast","dir":"Articles","previous_headings":"","what":"Stratified rasters - sraster","title":"sgsR","text":"tutorial, going demonstrate produce basic sraster existing sample data, used subsequent examples. produce sraster, use strat_kmeans(). function uses k-means algorithm stratify input mraster.  sraster produced, use sample_srs() randomly sample points within sraster produce sample network output.","code":"#--- apply kmeans algorithm to metrics raster ---# sraster <- strat_kmeans(mraster = mraster, # use mraster as input for sampling                         nStrata = 4, # algorithm will produce 4 strata                         plot = TRUE) # algorithm will plot output #--- apply stratified sampling ---# existing <- sample_strat(sraster = sraster, # use mraster as input for sampling                          nSamp = 200, # request 200 samples be taken                          mindist = 100, # define that samples must be 100 m apart                          plot = TRUE) # algorithm will plot output"},{"path":"/articles/sgsR.html","id":"pipe","dir":"Articles","previous_headings":"","what":"%>%","title":"sgsR","text":"sgsR package leverages %>% operator magrittr package. allows us “pipe” operations together save amount code needed achieve outcome. simple example demonstrated .","code":"#--- non piped ---# sraster <- strat_kmeans(mraster = mraster, # use mraster as input for sampling                         nStrata = 4, # algorithm will produce 4 strata                         plot = TRUE) # algorithm will plot output  existing <- sample_srs(raster = sraster, # use mraster as input for sampling                        nSamp = 200, # request 200 samples be taken                        mindist = 100, # define that samples must be 100 m apart                        plot = TRUE) # algorithm will plot output  extract_metrics(mraster = mraster,                 existing = existing)  #--- piped ---# strat_kmeans(mraster = mraster, nStrata = 4) %>%   sample_srs(., nSamp = 200, mindist = 100) %>%   extract_metrics(mraster = mraster, existing = .)"},{"path":"/articles/stratification.html","id":"kmeans","dir":"Articles","previous_headings":"","what":"strat_kmeans","title":"stratification","text":"demonstrate preliminary example using strat_kmeans() algorithm prepare sraster input data provide additional examples . Notice code plot anything. plot = FALSE set default functions sgsR package. , demonstrate examples plot = TRUE set.","code":"#--- perform stratification using k-means ---# strat_kmeans(mraster = mraster, # input              nStrata = 5) # algorithm will produce 4 strata #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      5 strat_kmeans(mraster = mraster, # input              nStrata = 10, # algorithm will produce 10 strata              iter = 1000, # set minimum number of iterations to determine kmeans centers              algorithm = \"MacQueen\", # use MacQueen algorithm              plot = TRUE) # plot output #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     10"},{"path":"/articles/stratification.html","id":"strat_quantiles","dir":"Articles","previous_headings":"","what":"strat_quantiles","title":"stratification","text":"strat_quantiles() algorithm divides data equally sized strata (nStrata). Similar strat_breaks() function, (quantile) algorithm capability perform stratification single mraster; users can also input secondary mraster (mraster2) specify number associated desired strata (nStrata2). Note dual stratification output result product \\(nStrata * nStrata2\\).","code":"#--- perform quantiles stratification ---# strat_quantiles(mraster = mraster$zq90,                 nStrata = 6,                 plot = TRUE) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      6  #--- dual stratification - will produce 12 output strata ---# strat_quantiles(mraster = mraster$zq90,                  mraster2 = mraster$zsd,                 nStrata = 3,                  nStrata2 = 4) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     12"},{"path":"/articles/stratification.html","id":"strat_breaks","dir":"Articles","previous_headings":"","what":"strat_breaks","title":"stratification","text":"strat_breaks() function stratifies data based breaks covariates user defines. Single mraster can defined additional mraster2 can also defined. breaks breaks2 coincide user defined breaks mraster mraster2 respectively. breaks created, can use input strat_breaks function using breaks breaks2 parameters.","code":"#--- perform stratification using user-defined breaks ---#  #--- define breaks for metric ---# breaks <- c(seq(0,100,20))  breaks #> [1]   0  20  40  60  80 100  #--- perform stratification using user-defined breaks ---#  values <- terra::values(mraster$zq90)  #--- define breaks for metric ---# breaks2 <- c(5,10,15,20,25)  breaks2 #> [1]  5 10 15 20 25 #--- stratify on 1 metric only ---#  strat_breaks(mraster = mraster$pzabove2,              breaks = breaks,              plot = TRUE) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      6 #--- stratify on 1 metric only ---#  strat_breaks(mraster = mraster$zq90,              breaks = breaks2,              plot = TRUE) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      6"},{"path":"/articles/stratification.html","id":"strat_poly","dir":"Articles","previous_headings":"","what":"strat_poly","title":"stratification","text":"strat_poly() algorithm stratifies input based spatial polygon attributes features. Users may wish stratify based categorical empirical variables available ALS data (e.g. species forest inventory polygons). function allows user define attribute interest well features within attribute grouped stratification. Users define input poly associated attribute. raster layer must defined guide spatial extent resolution output stratification polygon. Based vector list features, stratification applied polygon rasterized appropriate strata. attribute column within polygon must defined features (within attribute) must specified define composition output strata. demonstration , attribute = \"NUTRIENTS\" features within NUTRIENTS (poor, rich, medium) define 3 desired output classes.  features can converted amalgamated classes. demonstration , rich medium features combined together, low left isolation. 2 vectors specified list, result output 2 classes (low & rich/medium).  may noticed details parameter present demonstration code . details parameter returns output outRaster, $lookUp table associated strata, polygon ($poly) created drive stratification based attributes features specified users.","code":"#--- load in polygon coverage ---# poly <- system.file(\"extdata\", \"inventory_polygons.shp\", package = \"sgsR\")  fri <- sf::st_read(poly) #> Reading layer `inventory_polygons' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\inventory_polygons.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 632 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere #--- stratify polygon coverage ---# #--- specify polygon attribute to stratify ---#  attribute <- \"NUTRIENTS\"  #--- specify features within attribute & how they should be grouped ---# #--- as a single vector ---#  features <- c(\"poor\", \"rich\", \"medium\")  srasterpoly <- strat_poly(poly = fri, # input polygon                           attribute = attribute, # attribute to stratify by                           features = features, # features within attribute                           raster = sraster, # raster to define extent and resolution for output                           plot = TRUE) # plot output #--- or as multiple lists ---# g1 <- \"poor\" g2 <- c(\"rich\", \"medium\")  features <- list(g1, g2)  strat_poly(poly = fri,            attribute = attribute,            features = features,            raster = sraster,            plot = TRUE,            details = TRUE) #> $outRaster #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      2  #>  #> $lookUp #>   strata features #> 1      1     poor #> 2      2     rich #> 3      2   medium #>  #> $poly #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 524, 2  (geometries, attributes) #>  extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #>  coord. ref. : UTM_Zone_17_Northern_Hemisphere  #>  names       : NUTRIENTS strata #>  type        :     <chr>  <int> #>  values      :      poor      1 #>                     poor      1 #>                     poor      1"},{"path":"/articles/stratification.html","id":"strat_map","dir":"Articles","previous_headings":"","what":"strat_map","title":"stratification","text":"situations multiple levels stratification may sought-. instance, user may wish combine output strat_poly() (see demonstration ) 3 classes, 4 class kmeans stratification generated vignette. total number classes output multiplicative number strata. example, sraster 3 strata sraster2 4 strata, output strat_map() 12 strata total. may occasions stratum interact spatially, result fewer output strata.  convention numeric value output strata concatenation (merging) sraster strata sraster2 strata. Check $lookUP clear depiction step.","code":"#--- map srasters ---# strat_map(sraster = srasterpoly, # strat_poly 3 class stratification           sraster2 = sraster, # strat_kmeans 4 class stratification           plot = TRUE) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :     11  #> max value   :     34 strat_map(sraster = srasterpoly, # strat_poly 3 class stratification           sraster2 = sraster, # strat_poly 3 class stratification           stack = TRUE, # stack input and output strata into multi layer output raster           details = TRUE, # provide additional details           plot = TRUE) # plot output #> Stacking sraster, sraster2, and their combination (stratamapped). #> $outRaster #> class       : SpatRaster  #> dimensions  : 277, 373, 3  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               memory   #>               memory   #> names       : strata, strata2, stratamapped  #> min values  :      1,       1,           11  #> max values  :      3,       4,           34  #>  #> $lookUp #>    strata strata2 stratamapped #> 1       3       3           33 #> 2       3       2           32 #> 3       3       1           31 #> 4       1       1           11 #> 5       1       4           14 #> 6       3       4           34 #> 7       1       3           13 #> 8       1       2           12 #> 9       2       3           23 #> 10      2       1           21 #> 11      2       4           24 #> 12      2       2           22"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tristan RH Goodbody. Author, maintainer, copyright holder. Nicholas C Coops. Author. Martin Queinnec. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tristan RH Goodbody, Nicholas C Coops Martin Queinnec (). Structurally Guided Sampling R. R package version 0.1.2. https://github.com/tgoodbody/sgsR","code":"@Manual{,   title = {Structurally Guided Sampling in R},   author = {Tristan RH Goodbody and Nicholas C Coops and Martin Queinnec},   note = {R package version 0.1.2},   url = {https://github.com/tgoodbody/sgsR}, }"},{"path":"/index.html","id":"sgsr---structurally-guided-sampling-","dir":"","previous_headings":"","what":"sgsR","title":"sgsR","text":"sgsR designed implement structurally guided sampling approaches enhanced forest inventories. package designed function using rasterized airborne laser scanning (ALS; Lidar) metrics allow stratification forested areas based structure.","code":""},{"path":"/index.html","id":"installation-computer","dir":"","previous_headings":"","what":"Installation 💻","title":"sgsR","text":"can install released version sgsR Github :","code":"install.packages(\"devtools\") devtools::install_github(\"https://github.com/tgoodbody/sgsR\") library(sgsR)"},{"path":"/index.html","id":"example-usage-chart_with_upwards_trend","dir":"","previous_headings":"","what":"Example usage :chart_with_upwards_trend:","title":"sgsR","text":"","code":"#--- Load mraster files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\")  #--- load the mraster using the terra package ---# mraster <- terra::rast(r)  #--- apply kmeans algorithm to mraster ---# sraster <- strat_kmeans(mraster = mraster, # use mraster as input for stratification                         nStrata = 4, # produce 4 strata                         plot = TRUE) # plot output                          #--- apply stratified sampling ---# existing <- sample_strat(sraster = sraster, # use sraster as input for sampling                          nSamp = 200, # request 200 samples                          mindist = 100, # samples must be 100 m apart                          plot = TRUE) # plot output"},{"path":"/index.html","id":"vignettes-books","dir":"","previous_headings":"","what":"Vignettes 📚","title":"sgsR","text":"Check online documentation see sgsR functions might use work! Vignettes include: Package fundamentals - vignette(\"sgsR\") Sampling algorithms - vignette(\"sampling\") Stratification algorithms - vignette(\"stratification\") Calculate algorithms - vignette(\"calculating\")","code":""},{"path":"/index.html","id":"collaborators-woman-man","dir":"","previous_headings":"","what":"Collaborators 👩 👨","title":"sgsR","text":"thankful continued collaboration academic, private industry, government institutions help improve sgsR. Special thanks :","code":""},{"path":"/index.html","id":"funding-raised_hands","dir":"","previous_headings":"","what":"Funding :raised_hands:","title":"sgsR","text":"Development sgsR made possible thanks financial support Canadian Wood Fibre Centre’s Forest Innovation Program.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/calculate_ahels.html","id":null,"dir":"Reference","previous_headings":"","what":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Perform adapted Hypercube Evaluation Legacy Sample (ahels) algorithm using existing site data raster metrics. New samples allocated based quantile ratios existing sample covariate dataset.","code":""},{"path":"/reference/calculate_ahels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"","code":"calculate_ahels(   mraster,   existing,   nQuant = 10,   nSamp = NULL,   threshold = 0.9,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/calculate_ahels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"mraster spatRaster. ALS metrics raster. existing sf. Samples resulting sample_* functions. nQuant Numeric. Number quantiles divide covariates samples . Quantiles cover least 1 percent area interest excluded returned NA. nSamp Numeric. Maximum number new samples allocate. provided, algorithm default allocating number samples provided. threshold Numeric. sample quantile ratio threshold establishing whether additional samples added. default = 0.9. Values close 1 can cause algorithm continually loop used sparingly. plot Logial. Plots existing (circles) new (crosses) samples first band mraster. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc.","code":""},{"path":"/reference/calculate_ahels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Returns sf point object existing samples supplemental samples added ahels algorithm.","code":""},{"path":"/reference/calculate_ahels.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/calculate_ahels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":[]},{"path":"/reference/calculate_ahels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_ahels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — calculate_ahels","text":"","code":"#--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\tgood.stu\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  calculate_ahels(   mraster = mr[[1:3]],   existing = e,   plot = TRUE ) #> Creating covariance matrix. #>    |                                                                       |                                                              |   0%   |                                                                       |                                                              |   1%   |                                                                       |=                                                             |   1%   |                                                                       |=                                                             |   2%   |                                                                       |==                                                            |   2%   |                                                                       |==                                                            |   3%   |                                                                       |==                                                            |   4%   |                                                                       |===                                                           |   4%   |                                                                       |===                                                           |   5%   |                                                                       |===                                                           |   6%   |                                                                       |====                                                          |   6%   |                                                                       |====                                                          |   7%   |                                                                       |=====                                                         |   7%   |                                                                       |=====                                                         |   8%   |                                                                       |=====                                                         |   9%   |                                                                       |======                                                        |   9%   |                                                                       |======                                                        |  10%   |                                                                       |=======                                                       |  10%   |                                                                       |=======                                                       |  11%   |                                                                       |=======                                                       |  12%   |                                                                       |========                                                      |  12%   |                                                                       |========                                                      |  13%   |                                                                       |========                                                      |  14%   |                                                                       |=========                                                     |  14%   |                                                                       |=========                                                     |  15%   |                                                                       |==========                                                    |  15%   |                                                                       |==========                                                    |  16%   |                                                                       |==========                                                    |  17%   |                                                                       |===========                                                   |  17%   |                                                                       |===========                                                   |  18%   |                                                                       |===========                                                   |  19%   |                                                                       |============                                                  |  19%   |                                                                       |============                                                  |  20%   |                                                                       |=============                                                 |  20%   |                                                                       |=============                                                 |  21%   |                                                                       |=============                                                 |  22%   |                                                                       |==============                                                |  22%   |                                                                       |==============                                                |  23%   |                                                                       |===============                                               |  23%   |                                                                       |===============                                               |  24%   |                                                                       |===============                                               |  25%   |                                                                       |================                                              |  25%   |                                                                       |================                                              |  26%   |                                                                       |================                                              |  27%   |                                                                       |=================                                             |  27%   |                                                                       |=================                                             |  28%   |                                                                       |==================                                            |  28%   |                                                                       |==================                                            |  29%   |                                                                       |==================                                            |  30%   |                                                                       |===================                                           |  30%   |                                                                       |===================                                           |  31%   |                                                                       |====================                                          |  31%   |                                                                       |====================                                          |  32%   |                                                                       |====================                                          |  33%   |                                                                       |=====================                                         |  33%   |                                                                       |=====================                                         |  34%   |                                                                       |=====================                                         |  35%   |                                                                       |======================                                        |  35%   |                                                                       |======================                                        |  36%   |                                                                       |=======================                                       |  36%   |                                                                       |=======================                                       |  37%   |                                                                       |=======================                                       |  38%   |                                                                       |========================                                      |  38%   |                                                                       |========================                                      |  39%   |                                                                       |========================                                      |  40%   |                                                                       |=========================                                     |  40%   |                                                                       |=========================                                     |  41%   |                                                                       |==========================                                    |  41%   |                                                                       |==========================                                    |  42%   |                                                                       |==========================                                    |  43%   |                                                                       |===========================                                   |  43%   |                                                                       |===========================                                   |  44%   |                                                                       |============================                                  |  44%   |                                                                       |============================                                  |  45%   |                                                                       |============================                                  |  46%   |                                                                       |=============================                                 |  46%   |                                                                       |=============================                                 |  47%   |                                                                       |=============================                                 |  48%   |                                                                       |==============================                                |  48%   |                                                                       |==============================                                |  49%   |                                                                       |===============================                               |  49%   |                                                                       |===============================                               |  50%   |                                                                       |===============================                               |  51%   |                                                                       |================================                              |  51%   |                                                                       |================================                              |  52%   |                                                                       |=================================                             |  52%   |                                                                       |=================================                             |  53%   |                                                                       |=================================                             |  54%   |                                                                       |==================================                            |  54%   |                                                                       |==================================                            |  55%   |                                                                       |==================================                            |  56%   |                                                                       |===================================                           |  56%   |                                                                       |===================================                           |  57%   |                                                                       |====================================                          |  57%   |                                                                       |====================================                          |  58%   |                                                                       |====================================                          |  59%   |                                                                       |=====================================                         |  59%   |                                                                       |=====================================                         |  60%   |                                                                       |======================================                        |  60%   |                                                                       |======================================                        |  61%   |                                                                       |======================================                        |  62%   |                                                                       |=======================================                       |  62%   |                                                                       |=======================================                       |  63%   |                                                                       |=======================================                       |  64%   |                                                                       |========================================                      |  64%   |                                                                       |========================================                      |  65%   |                                                                       |=========================================                     |  65%   |                                                                       |=========================================                     |  66%   |                                                                       |=========================================                     |  67%   |                                                                       |==========================================                    |  67%   |                                                                       |==========================================                    |  68%   |                                                                       |==========================================                    |  69%   |                                                                       |===========================================                   |  69%   |                                                                       |===========================================                   |  70%   |                                                                       |============================================                  |  70%   |                                                                       |============================================                  |  71%   |                                                                       |============================================                  |  72%   |                                                                       |=============================================                 |  72%   |                                                                       |=============================================                 |  73%   |                                                                       |==============================================                |  73%   |                                                                       |==============================================                |  74%   |                                                                       |==============================================                |  75%   |                                                                       |===============================================               |  75%   |                                                                       |===============================================               |  76%   |                                                                       |===============================================               |  77%   |                                                                       |================================================              |  77%   |                                                                       |================================================              |  78%   |                                                                       |=================================================             |  78%   |                                                                       |=================================================             |  79%   |                                                                       |=================================================             |  80%   |                                                                       |==================================================            |  80%   |                                                                       |==================================================            |  81%   |                                                                       |===================================================           |  81%   |                                                                       |===================================================           |  82%   |                                                                       |===================================================           |  83%   |                                                                       |====================================================          |  83%   |                                                                       |====================================================          |  84%   |                                                                       |====================================================          |  85%   |                                                                       |=====================================================         |  85%   |                                                                       |=====================================================         |  86%   |                                                                       |======================================================        |  86%   |                                                                       |======================================================        |  87%   |                                                                       |======================================================        |  88%   |                                                                       |=======================================================       |  88%   |                                                                       |=======================================================       |  89%   |                                                                       |=======================================================       |  90%   |                                                                       |========================================================      |  90%   |                                                                       |========================================================      |  91%   |                                                                       |=========================================================     |  91%   |                                                                       |=========================================================     |  92%   |                                                                       |=========================================================     |  93%   |                                                                       |==========================================================    |  93%   |                                                                       |==========================================================    |  94%   |                                                                       |===========================================================   |  94%   |                                                                       |===========================================================   |  95%   |                                                                       |===========================================================   |  96%   |                                                                       |============================================================  |  96%   |                                                                       |============================================================  |  97%   |                                                                       |============================================================  |  98%   |                                                                       |============================================================= |  98%   |                                                                       |============================================================= |  99%   |                                                                       |==============================================================|  99%   |                                                                       |==============================================================| 100% #> threshold of 0.9 has been provided. Samples will be added until quantile ratio is reached #> Underrepresented Quantile 1 - A total of 11 samples have been allocated. #> Underrepresented Quantile 2 - A total of 2 samples have been allocated. #> Underrepresented Quantile 3 - A total of 2 samples have been allocated. #> Underrepresented Quantile 4 - A total of 4 samples have been allocated. #> Underrepresented Quantile 5 - A total of 3 samples have been allocated. #> Underrepresented Quantile 6 - A total of 4 samples have been allocated. #> Underrepresented Quantile 7 - A total of 5 samples have been allocated. #> Underrepresented Quantile 8 - A total of 5 samples have been allocated. #> Underrepresented Quantile 9 - A total of 2 samples have been allocated. #> Underrepresented Quantile 10 - A total of 3 samples have been allocated. #> Underrepresented Quantile 11 - A total of 3 samples have been allocated. #> Underrepresented Quantile 12 - A total of 3 samples have been allocated. #> Underrepresented Quantile 13 - A total of 1 samples have been allocated. #> Underrepresented Quantile 14 - A total of 4 samples have been allocated. #> A total of 52 new samples added  #> Simple feature collection with 152 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        type     zmean pzabove2  zsd               geometry #> 1  existing 11.490000     79.7 4.96 POINT (434970 5343030) #> 2  existing 10.679999     91.9 3.90 POINT (435590 5340510) #> 3  existing  5.640000     24.8 4.23 POINT (434290 5338670) #> 4  existing  7.490000     38.5 3.61 POINT (435170 5340410) #> 5  existing  9.170000     69.4 4.20 POINT (437550 5340650) #> 6  existing 11.059999     79.8 5.30 POINT (435850 5340130) #> 7  existing  9.240000     74.8 5.34 POINT (431630 5343230) #> 8  existing  9.420000     89.6 3.63 POINT (436510 5340870) #> 9  existing  9.059999     65.1 4.80 POINT (435990 5339950) #> 10 existing  8.170000     93.5 3.38 POINT (438250 5337770)  calculate_ahels(   mraster = mr[[1:3]],   existing = e,   nQuant = 20,   nSamp = 300,   filename = tempfile(fileext = \".shp\") ) #> Creating covariance matrix. #>    |                                                                       |                                                              |   0%   |                                                                       |                                                              |   1%   |                                                                       |=                                                             |   1%   |                                                                       |=                                                             |   2%   |                                                                       |==                                                            |   2%   |                                                                       |==                                                            |   3%   |                                                                       |==                                                            |   4%   |                                                                       |===                                                           |   4%   |                                                                       |===                                                           |   5%   |                                                                       |===                                                           |   6%   |                                                                       |====                                                          |   6%   |                                                                       |====                                                          |   7%   |                                                                       |=====                                                         |   7%   |                                                                       |=====                                                         |   8%   |                                                                       |=====                                                         |   9%   |                                                                       |======                                                        |   9%   |                                                                       |======                                                        |  10%   |                                                                       |=======                                                       |  10%   |                                                                       |=======                                                       |  11%   |                                                                       |=======                                                       |  12%   |                                                                       |========                                                      |  12%   |                                                                       |========                                                      |  13%   |                                                                       |========                                                      |  14%   |                                                                       |=========                                                     |  14%   |                                                                       |=========                                                     |  15%   |                                                                       |==========                                                    |  15%   |                                                                       |==========                                                    |  16%   |                                                                       |==========                                                    |  17%   |                                                                       |===========                                                   |  17%   |                                                                       |===========                                                   |  18%   |                                                                       |===========                                                   |  19%   |                                                                       |============                                                  |  19%   |                                                                       |============                                                  |  20%   |                                                                       |=============                                                 |  20%   |                                                                       |=============                                                 |  21%   |                                                                       |=============                                                 |  22%   |                                                                       |==============                                                |  22%   |                                                                       |==============                                                |  23%   |                                                                       |===============                                               |  23%   |                                                                       |===============                                               |  24%   |                                                                       |===============                                               |  25%   |                                                                       |================                                              |  25%   |                                                                       |================                                              |  26%   |                                                                       |================                                              |  27%   |                                                                       |=================                                             |  27%   |                                                                       |=================                                             |  28%   |                                                                       |==================                                            |  28%   |                                                                       |==================                                            |  29%   |                                                                       |==================                                            |  30%   |                                                                       |===================                                           |  30%   |                                                                       |===================                                           |  31%   |                                                                       |====================                                          |  31%   |                                                                       |====================                                          |  32%   |                                                                       |====================                                          |  33%   |                                                                       |=====================                                         |  33%   |                                                                       |=====================                                         |  34%   |                                                                       |=====================                                         |  35%   |                                                                       |======================                                        |  35%   |                                                                       |======================                                        |  36%   |                                                                       |=======================                                       |  36%   |                                                                       |=======================                                       |  37%   |                                                                       |=======================                                       |  38%   |                                                                       |========================                                      |  38%   |                                                                       |========================                                      |  39%   |                                                                       |========================                                      |  40%   |                                                                       |=========================                                     |  40%   |                                                                       |=========================                                     |  41%   |                                                                       |==========================                                    |  41%   |                                                                       |==========================                                    |  42%   |                                                                       |==========================                                    |  43%   |                                                                       |===========================                                   |  43%   |                                                                       |===========================                                   |  44%   |                                                                       |============================                                  |  44%   |                                                                       |============================                                  |  45%   |                                                                       |============================                                  |  46%   |                                                                       |=============================                                 |  46%   |                                                                       |=============================                                 |  47%   |                                                                       |=============================                                 |  48%   |                                                                       |==============================                                |  48%   |                                                                       |==============================                                |  49%   |                                                                       |===============================                               |  49%   |                                                                       |===============================                               |  50%   |                                                                       |===============================                               |  51%   |                                                                       |================================                              |  51%   |                                                                       |================================                              |  52%   |                                                                       |=================================                             |  52%   |                                                                       |=================================                             |  53%   |                                                                       |=================================                             |  54%   |                                                                       |==================================                            |  54%   |                                                                       |==================================                            |  55%   |                                                                       |==================================                            |  56%   |                                                                       |===================================                           |  56%   |                                                                       |===================================                           |  57%   |                                                                       |====================================                          |  57%   |                                                                       |====================================                          |  58%   |                                                                       |====================================                          |  59%   |                                                                       |=====================================                         |  59%   |                                                                       |=====================================                         |  60%   |                                                                       |======================================                        |  60%   |                                                                       |======================================                        |  61%   |                                                                       |======================================                        |  62%   |                                                                       |=======================================                       |  62%   |                                                                       |=======================================                       |  63%   |                                                                       |=======================================                       |  64%   |                                                                       |========================================                      |  64%   |                                                                       |========================================                      |  65%   |                                                                       |=========================================                     |  65%   |                                                                       |=========================================                     |  66%   |                                                                       |=========================================                     |  67%   |                                                                       |==========================================                    |  67%   |                                                                       |==========================================                    |  68%   |                                                                       |==========================================                    |  69%   |                                                                       |===========================================                   |  69%   |                                                                       |===========================================                   |  70%   |                                                                       |============================================                  |  70%   |                                                                       |============================================                  |  71%   |                                                                       |============================================                  |  72%   |                                                                       |=============================================                 |  72%   |                                                                       |=============================================                 |  73%   |                                                                       |==============================================                |  73%   |                                                                       |==============================================                |  74%   |                                                                       |==============================================                |  75%   |                                                                       |===============================================               |  75%   |                                                                       |===============================================               |  76%   |                                                                       |===============================================               |  77%   |                                                                       |================================================              |  77%   |                                                                       |================================================              |  78%   |                                                                       |=================================================             |  78%   |                                                                       |=================================================             |  79%   |                                                                       |=================================================             |  80%   |                                                                       |==================================================            |  80%   |                                                                       |==================================================            |  81%   |                                                                       |===================================================           |  81%   |                                                                       |===================================================           |  82%   |                                                                       |===================================================           |  83%   |                                                                       |====================================================          |  83%   |                                                                       |====================================================          |  84%   |                                                                       |====================================================          |  85%   |                                                                       |=====================================================         |  85%   |                                                                       |=====================================================         |  86%   |                                                                       |======================================================        |  86%   |                                                                       |======================================================        |  87%   |                                                                       |======================================================        |  88%   |                                                                       |=======================================================       |  88%   |                                                                       |=======================================================       |  89%   |                                                                       |=======================================================       |  90%   |                                                                       |========================================================      |  90%   |                                                                       |========================================================      |  91%   |                                                                       |=========================================================     |  91%   |                                                                       |=========================================================     |  92%   |                                                                       |=========================================================     |  93%   |                                                                       |==========================================================    |  93%   |                                                                       |==========================================================    |  94%   |                                                                       |===========================================================   |  94%   |                                                                       |===========================================================   |  95%   |                                                                       |===========================================================   |  96%   |                                                                       |============================================================  |  96%   |                                                                       |============================================================  |  97%   |                                                                       |============================================================  |  98%   |                                                                       |============================================================= |  98%   |                                                                       |============================================================= |  99%   |                                                                       |==============================================================|  99%   |                                                                       |==============================================================| 100% #> nSamp of 300 has been provided. Samples will be added until this number is reached #> Underrepresented Quantile 1 - A total of 8 samples have been allocated. #> Underrepresented Quantile 2 - A total of 3 samples have been allocated. #> Underrepresented Quantile 3 - A total of 4 samples have been allocated. #> Underrepresented Quantile 4 - A total of 2 samples have been allocated. #> Underrepresented Quantile 5 - A total of 2 samples have been allocated. #> Underrepresented Quantile 6 - A total of 2 samples have been allocated. #> Underrepresented Quantile 7 - A total of 2 samples have been allocated. #> Underrepresented Quantile 8 - A total of 2 samples have been allocated. #> Underrepresented Quantile 9 - A total of 2 samples have been allocated. #> Underrepresented Quantile 10 - A total of 3 samples have been allocated. #> Underrepresented Quantile 11 - A total of 6 samples have been allocated. #> Underrepresented Quantile 12 - A total of 5 samples have been allocated. #> Underrepresented Quantile 13 - A total of 4 samples have been allocated. #> Underrepresented Quantile 14 - A total of 2 samples have been allocated. #> Underrepresented Quantile 15 - A total of 1 samples have been allocated. #> Underrepresented Quantile 16 - A total of 3 samples have been allocated. #> Underrepresented Quantile 17 - A total of 10 samples have been allocated. #> Underrepresented Quantile 18 - A total of 4 samples have been allocated. #> Underrepresented Quantile 19 - A total of 1 samples have been allocated. #> Underrepresented Quantile 20 - A total of 2 samples have been allocated. #> Underrepresented Quantile 21 - A total of 3 samples have been allocated. #> Underrepresented Quantile 22 - A total of 2 samples have been allocated. #> Underrepresented Quantile 23 - A total of 3 samples have been allocated. #> Underrepresented Quantile 24 - A total of 1 samples have been allocated. #> Underrepresented Quantile 25 - A total of 2 samples have been allocated. #> Underrepresented Quantile 26 - A total of 4 samples have been allocated. #> Underrepresented Quantile 27 - A total of 1 samples have been allocated. #> Underrepresented Quantile 28 - A total of 2 samples have been allocated. #> Underrepresented Quantile 29 - A total of 3 samples have been allocated. #> Underrepresented Quantile 30 - A total of 1 samples have been allocated. #> Underrepresented Quantile 31 - A total of 6 samples have been allocated. #> Underrepresented Quantile 32 - A total of 1 samples have been allocated. #> Underrepresented Quantile 33 - A total of 6 samples have been allocated. #> Underrepresented Quantile 34 - A total of 8 samples have been allocated. #> Underrepresented Quantile 35 - A total of 1 samples have been allocated. #> Underrepresented Quantile 36 - A total of 1 samples have been allocated. #> Underrepresented Quantile 37 - A total of 1 samples have been allocated. #> Underrepresented Quantile 38 - A total of 3 samples have been allocated. #> Underrepresented Quantile 39 - A total of 4 samples have been allocated. #> Underrepresented Quantile 40 - A total of 1 samples have been allocated. #> Underrepresented Quantile 41 - A total of 1 samples have been allocated. #> Underrepresented Quantile 42 - A total of 4 samples have been allocated. #> Underrepresented Quantile 43 - A total of 4 samples have been allocated. #> Underrepresented Quantile 44 - A total of 2 samples have been allocated. #> Underrepresented Quantile 45 - A total of 3 samples have been allocated. #> Underrepresented Quantile 46 - A total of 2 samples have been allocated. #> Underrepresented Quantile 47 - A total of 2 samples have been allocated. #> Underrepresented Quantile 48 - A total of 4 samples have been allocated. #> Underrepresented Quantile 49 - A total of 2 samples have been allocated. #> Underrepresented Quantile 50 - A total of 1 samples have been allocated. #> Underrepresented Quantile 51 - A total of 5 samples have been allocated. #> Underrepresented Quantile 52 - A total of 4 samples have been allocated. #> Underrepresented Quantile 53 - A total of 1 samples have been allocated. #> Underrepresented Quantile 54 - A total of 2 samples have been allocated. #> Underrepresented Quantile 55 - A total of 8 samples have been allocated. #> Underrepresented Quantile 56 - A total of 1 samples have been allocated. #> Underrepresented Quantile 57 - A total of 2 samples have been allocated. #> Underrepresented Quantile 58 - A total of 3 samples have been allocated. #> Underrepresented Quantile 59 - A total of 1 samples have been allocated. #> Underrepresented Quantile 60 - A total of 3 samples have been allocated. #> Underrepresented Quantile 61 - A total of 4 samples have been allocated. #> Underrepresented Quantile 62 - A total of 2 samples have been allocated. #> Underrepresented Quantile 63 - A total of 7 samples have been allocated. #> Underrepresented Quantile 64 - A total of 1 samples have been allocated. #> Underrepresented Quantile 65 - A total of 4 samples have been allocated. #> Underrepresented Quantile 66 - A total of 3 samples have been allocated. #> Underrepresented Quantile 67 - A total of 5 samples have been allocated. #> Underrepresented Quantile 68 - A total of 2 samples have been allocated. #> Underrepresented Quantile 69 - A total of 2 samples have been allocated. #> Underrepresented Quantile 70 - A total of 4 samples have been allocated. #> Underrepresented Quantile 71 - A total of 2 samples have been allocated. #> Underrepresented Quantile 72 - A total of 1 samples have been allocated. #> Underrepresented Quantile 73 - A total of 3 samples have been allocated. #> Underrepresented Quantile 74 - A total of 6 samples have been allocated. #> Underrepresented Quantile 75 - A total of 1 samples have been allocated. #> Underrepresented Quantile 76 - A total of 1 samples have been allocated. #> Underrepresented Quantile 77 - A total of 4 samples have been allocated. #> Underrepresented Quantile 78 - A total of 1 samples have been allocated. #> Underrepresented Quantile 79 - A total of 3 samples have been allocated. #> Underrepresented Quantile 80 - A total of 1 samples have been allocated. #> Underrepresented Quantile 81 - A total of 6 samples have been allocated. #> Underrepresented Quantile 82 - A total of 1 samples have been allocated. #> Underrepresented Quantile 83 - A total of 5 samples have been allocated. #> Underrepresented Quantile 84 - A total of 2 samples have been allocated. #> Underrepresented Quantile 85 - A total of 2 samples have been allocated. #> Underrepresented Quantile 86 - A total of 3 samples have been allocated. #> Underrepresented Quantile 87 - A total of 1 samples have been allocated. #> Underrepresented Quantile 88 - A total of 2 samples have been allocated. #> Underrepresented Quantile 89 - A total of 3 samples have been allocated. #> Underrepresented Quantile 90 - A total of 2 samples have been allocated. #> Underrepresented Quantile 91 - A total of 5 samples have been allocated. #> Underrepresented Quantile 92 - A total of 1 samples have been allocated. #> Underrepresented Quantile 93 - A total of 2 samples have been allocated. #> Underrepresented Quantile 94 - A total of 1 samples have been allocated. #> Underrepresented Quantile 95 - A total of 1 samples have been allocated. #> Underrepresented Quantile 96 - A total of 4 samples have been allocated. #> Underrepresented Quantile 97 - A total of 1 samples have been allocated. #> Underrepresented Quantile 98 - A total of 2 samples have been allocated. #> Underrepresented Quantile 99 - A total of 2 samples have been allocated. #> Underrepresented Quantile 100 - A total of 2 samples have been allocated. #> Underrepresented Quantile 101 - A total of 2 samples have been allocated. #> Underrepresented Quantile 102 - A total of 3 samples have been allocated. #> Underrepresented Quantile 103 - A total of 2 samples have been allocated. #> Underrepresented Quantile 104 - A total of 1 samples have been allocated. #> Underrepresented Quantile 105 - A total of 6 samples have been allocated. #> Underrepresented Quantile 106 - A total of 4 samples have been allocated. #> A total of 300 new samples added #> Writing layer `file54b069622846' to data source  #>   `C:\\Users\\tgood.stu\\AppData\\Local\\Temp\\Rtmp0Uciba\\file54b069622846.shp' using driver `ESRI Shapefile' #> Writing 400 features with 4 fields and geometry type Point. #> Simple feature collection with 400 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337710 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        type     zmean pzabove2  zsd               geometry #> 1  existing 11.490000     79.7 4.96 POINT (434970 5343030) #> 2  existing 10.679999     91.9 3.90 POINT (435590 5340510) #> 3  existing  5.640000     24.8 4.23 POINT (434290 5338670) #> 4  existing  7.490000     38.5 3.61 POINT (435170 5340410) #> 5  existing  9.170000     69.4 4.20 POINT (437550 5340650) #> 6  existing 11.059999     79.8 5.30 POINT (435850 5340130) #> 7  existing  9.240000     74.8 5.34 POINT (431630 5343230) #> 8  existing  9.420000     89.6 3.63 POINT (436510 5340870) #> 9  existing  9.059999     65.1 4.80 POINT (435990 5339950) #> 10 existing  8.170000     93.5 3.38 POINT (438250 5337770)"},{"path":"/reference/calculate_allocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine required samples in strata — calculate_allocation","title":"Determine required samples in strata — calculate_allocation","text":"Determine required samples strata","code":""},{"path":"/reference/calculate_allocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine required samples in strata — calculate_allocation","text":"","code":"calculate_allocation(   sraster,   nSamp,   allocation = \"prop\",   mraster = NULL,   existing = NULL,   force = FALSE )"},{"path":"/reference/calculate_allocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine required samples in strata — calculate_allocation","text":"sraster spatRaster. Stratification raster used sampling. nSamp Numeric. Number desired samples. allocation Character. Allocation algorithm used. Either prop (default) proportional allocation optim optimal allocation (equal sampling cost) equal equal number samples (defined nSamp)  strata. mraster spatRaster. ALS metric raster. Required allocation = optim. existing sf data.frame.  Existing plot network. force Logical. Default = FALSE - force nSamp exactly user defined value cases nSamp sraster strata count equally divisible. Additional samples often need allocated removed based rounding differences resulting proportional differences nSamp strata coverages sraster. instances samples either added strata lowest number samples removed strata highest number samples. effect existing provided.","code":""},{"path":"/reference/calculate_allocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine required samples in strata — calculate_allocation","text":"Returns data.frame : strata - Strata ID. total - Total samples allocated based representation (positive) representation (negative) removed users discretion. need - Total required samples per strata. Rounded.","code":""},{"path":"/reference/calculate_allocation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine required samples in strata — calculate_allocation","text":"Determine many samples allocate within strata","code":""},{"path":"/reference/calculate_allocation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determine required samples in strata — calculate_allocation","text":"Gregoire, T.G., & Valentine, H.T. (2007). Sampling Strategies Natural Resources Environment (1st ed.).  Chapman Hall/CRC. https://doi.org/10.1201/9780203498880","code":""},{"path":[]},{"path":"/reference/calculate_allocation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine required samples in strata — calculate_allocation","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_allocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine required samples in strata — calculate_allocation","text":"","code":"#--- Load strata raster and existing samples---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  #--- perform grid sampling ---# calculate_allocation(   sraster = sr,   nSamp = 50 ) #> Implementing porportional allocation of samples #> nSamp of 50 is not perfectly divisible based on strata distribution. nSamp of 56 will be returned. Use \"force = TRUE\" to brute force to 50. #>    strata total #> 1       1     4 #> 2       2     8 #> 3       3     4 #> 4       4     6 #> 5       5     7 #> 6       6     7 #> 7       7     6 #> 8       8     5 #> 9       9     6 #> 10     10     3  calculate_allocation(   sraster = sr,   nSamp = 50,   force = TRUE ) #> Implementing porportional allocation of samples #> Forcing 50 total samples. #>    strata total #> 1       1     4 #> 2       2     6 #> 3       3     4 #> 4       4     6 #> 5       5     6 #> 6       6     6 #> 7       7     5 #> 8       8     5 #> 9       9     5 #> 10     10     3"},{"path":"/reference/calculate_coobs.html","id":null,"dir":"Reference","previous_headings":"","what":"coobs algorithm sampling — calculate_coobs","title":"coobs algorithm sampling — calculate_coobs","text":"Perform COunt OBServations (coobs) algorithm using existing site data raster metrics. algorithm aids user determining additional samples located comparing existing samples pixel associated covariates. output coobs raster used constrain clhs sampling areas underreprented.","code":""},{"path":"/reference/calculate_coobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"coobs algorithm sampling — calculate_coobs","text":"","code":"calculate_coobs(   mraster,   existing,   cores = 1,   threshold = 0.95,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/calculate_coobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"coobs algorithm sampling — calculate_coobs","text":"mraster spatRaster. ALS metrics raster. Requires least 2 layers calculate covariance matrix existing sf.  Existing plot network. cores Numeric. Number cores use parallel processing. default = 1 threshold Numeric. Proxy maximum pixel quantile avoid outliers. default = 0.95 plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc.","code":""},{"path":"/reference/calculate_coobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"coobs algorithm sampling — calculate_coobs","text":"output raster coobs classified coobs layers.","code":""},{"path":"/reference/calculate_coobs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"coobs algorithm sampling — calculate_coobs","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/calculate_coobs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"coobs algorithm sampling — calculate_coobs","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":[]},{"path":"/reference/calculate_coobs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"coobs algorithm sampling — calculate_coobs","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_coobs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"coobs algorithm sampling — calculate_coobs","text":"","code":"if (FALSE) { #--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e)  calculate_coobs(   mraster = mr,   existing = e,   cores = 4,   details = TRUE,   filename = tempfile(fileext = \".tif\") ) }"},{"path":"/reference/calculate_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance to access layer — calculate_distance","title":"Distance to access layer — calculate_distance","text":"Per pixel distance nearest access vector. Intended used `cost` constraint within sample_clhs function","code":""},{"path":"/reference/calculate_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance to access layer — calculate_distance","text":"","code":"calculate_distance(   raster,   access,   plot = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/calculate_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance to access layer — calculate_distance","text":"raster spatRaster. Raster used calculate pixel level distance access layer. access sf. Road access network - must lines. plot Logical. Plots output strata raster samples. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists.","code":""},{"path":"/reference/calculate_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance to access layer — calculate_distance","text":"Input raster dist2access layer appended.","code":""},{"path":[]},{"path":"/reference/calculate_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distance to access layer — calculate_distance","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance to access layer — calculate_distance","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  calculate_distance(   raster = sr,   access = ac, ) #> calculating per pixel distance to provided access layer #> class       : SpatRaster  #> dimensions  : 277, 373, 2  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : kmeans.tif   #>               memory   #> names       :      strata, dist2access  #> min values  : 1.000000000, 0.006621213  #> max values  :       10.00,     1061.66"},{"path":"/reference/calculate_lhsOpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"Population level analysis metric raster data determine optimal Latin Hypercube sample size","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"","code":"calculate_lhsOpt(   popLHS,   PCA = TRUE,   quant = TRUE,   KLdiv = TRUE,   minSamp = 10,   maxSamp = 100,   step = 10,   rep = 10,   iter = 10000 )"},{"path":"/reference/calculate_lhsOpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"popLHS List. Output calculate_pop function. PCA Logical. Calculates principal component loadings population PCA similarity factor testing. default = FALSE. quant Logical. Perform quantile comparison testing. KLdiv Logical. Perform Kullback–Leibler divergence testing. minSamp Numeric. Minimum sample size test. default = 10. maxSamp Numeric. Maximum sample size test. default = 100. step Numeric. Sample step size iteration. default = 10. rep Numeric. Internal repetitions sample size. default = 10. iter Numeric. Internal clhs - positive number, giving number iterations Metropolis-Hastings annealing process. Defaults 10000.","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"data.frame summary statistics.","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_lhsOpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze optimal Latin hypercube sample number — calculate_lhsOpt","text":"","code":"if (FALSE) { #--- Load raster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  #--- calculate lhsPop details ---# poplhs <- calculate_pop(mraster = mr)  calculate_lhsOpt(popLHS = poplhs)  calculate_lhsOpt(   popLHS = poplhs,   PCA = FALSE,   iter = 200 ) }"},{"path":"/reference/calculate_lhsPop.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze covariates for lhs — calculate_lhsPop","title":"Analyze covariates for lhs — calculate_lhsPop","text":"Population level analysis metric raster data Calculates population level statistics including principal components, quantile matrix, Kullback-leibler divergence neccesary calculate_lhsOpt.","code":""},{"path":"/reference/calculate_lhsPop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze covariates for lhs — calculate_lhsPop","text":"","code":"calculate_lhsPop(mraster, PCA = TRUE, quant = TRUE, nQuant = 10, KLdiv = TRUE)"},{"path":"/reference/calculate_lhsPop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze covariates for lhs — calculate_lhsPop","text":"mraster spatRaster. ALS metrics raster. PCA Logical. Calculates principal component loadings population PCA similarity factor testing. default = TRUE. quant Logical. Calculates quantile matrix population quantile comparison testing. default = TRUE. nQuant Numeric. Number quantiles divide population quant. default = 10. KLdiv Logical. Calculates covariate matrix population Kullback–Leibler divergence testing. default = TRUE. Relies quant = TRUE calculate.","code":""},{"path":"/reference/calculate_lhsPop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze covariates for lhs — calculate_lhsPop","text":"List matrices used input calculate_lhsOpt.","code":""},{"path":"/reference/calculate_lhsPop.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Analyze covariates for lhs — calculate_lhsPop","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/calculate_lhsPop.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analyze covariates for lhs — calculate_lhsPop","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":[]},{"path":"/reference/calculate_lhsPop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyze covariates for lhs — calculate_lhsPop","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_lhsPop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze covariates for lhs — calculate_lhsPop","text":"","code":"if (FALSE) { #--- Load raster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  calculate_lhsPop(mraster = mr)  calculate_lhsPop(   mraster = mr,   nQuant = 10,   PCA = FALSE ) }"},{"path":"/reference/calculate_pcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Raster principal components — calculate_pcomp","title":"Raster principal components — calculate_pcomp","text":"Calculate rasterize principal components metric raster","code":""},{"path":"/reference/calculate_pcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raster principal components — calculate_pcomp","text":"","code":"calculate_pcomp(   mraster,   nComp,   center = TRUE,   scale = TRUE,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/calculate_pcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raster principal components — calculate_pcomp","text":"mraster spatRaster. ALS metrics raster. nComp Numeric. Value indicating number principal components rasterized. prior analysis. center Logical. Value indicating whether variables shifted zero centered. scale Logical. Value indicating whether variables scaled unit variance plot Logical. Plots output strata raster samples. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists. ... Additional arguments passed prcomp.","code":""},{"path":"/reference/calculate_pcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raster principal components — calculate_pcomp","text":"Output raster specified number principal components layers.","code":""},{"path":[]},{"path":"/reference/calculate_pcomp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Raster principal components — calculate_pcomp","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_pcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raster principal components — calculate_pcomp","text":"","code":"#--- Load raster ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  calculate_pcomp(   mraster = mr,   nComp = 2,   plot = TRUE )  #> class       : SpatRaster  #> dimensions  : 277, 373, 2  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               memory   #> names       :       PC1,       PC2  #> min values  : -4.402269, -5.357801  #> max values  :  5.282663,  2.155242   pcomp <- calculate_pcomp(   mraster = mr,   nComp = 3,   details = TRUE )  #--- Display principal component details ---# pcomp$pca #> Standard deviations (1, .., p=3): #> [1] 1.5479878 0.7359109 0.2493371 #>  #> Rotation (n x k) = (3 x 3): #>                PC1        PC2        PC3 #> zq90     0.6286296 -0.1795433 -0.7566961 #> pzabove2 0.5104140  0.8293596  0.2272450 #> zsd      0.5867729 -0.5290812  0.6130014  #--- Display importance of components ---# summary(pcomp$pca) #> Importance of components: #>                           PC1    PC2     PC3 #> Standard deviation     1.5480 0.7359 0.24934 #> Proportion of Variance 0.7988 0.1805 0.02072 #> Cumulative Proportion  0.7988 0.9793 1.00000"},{"path":"/reference/calculate_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"Population descriptors — calculate_pop","title":"Population descriptors — calculate_pop","text":"Population matrices descriptions metric raster data Calculates population level statistics including principal components, quantile matrix, covariance matrix needed necessary calculate_lhsOpt. Outputs can also used input sample_ahels.","code":""},{"path":"/reference/calculate_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population descriptors — calculate_pop","text":"","code":"calculate_pop(mraster, PCA = FALSE, matQ = TRUE, nQuant = 10, matCov = TRUE)"},{"path":"/reference/calculate_pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population descriptors — calculate_pop","text":"mraster spatRaster. ALS metrics raster. PCA Logical. Calculates principal component loadings population PCA similarity factor testing. default = FALSE. matQ Logical. Calculates quantile matrix population quantile comparison testing. default = TRUE. nQuant Numeric. Number quantiles divide population matQ. default = 10. matCov Logical. Calculates covariate matrix population. Needed Kullback–Leibler divergence testing. default = TRUE. Relies matQ = TRUE calculate.","code":""},{"path":"/reference/calculate_pop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population descriptors — calculate_pop","text":"List matrices used input calculate_lhsOpt.","code":""},{"path":"/reference/calculate_pop.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Population descriptors — calculate_pop","text":"Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/calculate_pop.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Population descriptors — calculate_pop","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":[]},{"path":"/reference/calculate_pop.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Population descriptors — calculate_pop","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_pop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population descriptors — calculate_pop","text":"","code":"if (FALSE) { #--- Load raster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  calculate_pop(mraster = mr)  calculate_pop(   mraster = mr,   nQuant = 10,   PCA = FALSE ) }"},{"path":"/reference/calculate_representation.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare representation of samples within sraster strata — calculate_representation","title":"Compare representation of samples within sraster strata — calculate_representation","text":"Compare representation samples within sraster strata","code":""},{"path":"/reference/calculate_representation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare representation of samples within sraster strata — calculate_representation","text":"","code":"calculate_representation(sraster, existing, plot = FALSE)"},{"path":"/reference/calculate_representation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare representation of samples within sraster strata — calculate_representation","text":"sraster spatRaster. Stratification raster used sampling. existing sf data.frame.  Existing plot network. plot Logical. Plot histogram output displaying frequency strata coverage sampling coverage sraster existing.","code":""},{"path":"/reference/calculate_representation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare representation of samples within sraster strata — calculate_representation","text":"Returns tibble : strata - sraster strata ID. srasterFreq - Coverage frequency percent sraster strata. sampleFreq - Sampling frequency percent within sraster strata. diffFreq - Difference srasterFreq & sampleFreq. Positive values indicate representation nSamp - Number samples within strata existing. need - srasterFreq * sum(nSamp). Total theoretical number required samples representative strata coverage. values rounded. important user consider diffFreq. small difference - e.g. 1 percent - sample vs. sraster frequency correspond algorithm allocating removing samples likely ignored.","code":""},{"path":"/reference/calculate_representation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare representation of samples within sraster strata — calculate_representation","text":"Calculate well sraster strata represented existing samples","code":""},{"path":[]},{"path":"/reference/calculate_representation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compare representation of samples within sraster strata — calculate_representation","text":"Tristan R.H. Goodbody, Martin Queinnec","code":""},{"path":"/reference/calculate_representation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare representation of samples within sraster strata — calculate_representation","text":"","code":"### --- generate example stratification ---###  #--- load ALS metrics from sgsR internal data ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\")  #--- read ALS metrics using the terra package ---# mraster <- terra::rast(r)  #--- perform stratification ---# sraster <- strat_kmeans(   mraster = mraster$zq90,   nStrata = 6,   plot = TRUE ) #> K-means being performed on 1 layers with 6 centers.   ### --- create existing sample network ---###  #--- simple random sampling ---# existing <- sample_srs(   raster = mraster$zq90,   nSamp = 100 )  #--- calculate representation ---#  calculate_representation(   sraster = sraster,   existing = existing,   plot = TRUE )  #> # A tibble: 6 x 6 #>   strata srasterFreq sampleFreq diffFreq nSamp  need #>    <dbl>       <dbl>      <dbl>    <dbl> <int> <dbl> #> 1      1        0.19       0.2    0.0100    20    -1 #> 2      2        0.26       0.22  -0.04      22     4 #> 3      3        0.16       0.2    0.04      20    -4 #> 4      4        0.21       0.24   0.03      24    -3 #> 5      5        0.06       0.07   0.0100     7    -1 #> 6      6        0.11       0.07  -0.04       7     4"},{"path":"/reference/calculate_sampsize.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample size determination — calculate_sampsize","title":"Sample size determination — calculate_sampsize","text":"Determine samples size simple random sampling using relative standard error","code":""},{"path":"/reference/calculate_sampsize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample size determination — calculate_sampsize","text":"","code":"calculate_sampsize(   mraster,   rse = NULL,   start = 0.01,   end = 0.05,   increment = 0.001,   plot = FALSE )"},{"path":"/reference/calculate_sampsize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample size determination — calculate_sampsize","text":"mraster spatRaster. Metrics raster. values must numeric. rse Numeric. Desired relative standard error (coefficient variation mean) threshold determine sample size. start Numeric. First rse value begin rse sequence. default = 0.01. end Numeric. Final rse value end rse sequence. default = 0.05. increment Numeric. Value increment start & end. default = 0.001. plot Logical. TRUE output graphical representation estimated sample size vs. rse.","code":""},{"path":"/reference/calculate_sampsize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample size determination — calculate_sampsize","text":"data.frame sample size rse raster variable.","code":""},{"path":"/reference/calculate_sampsize.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample size determination — calculate_sampsize","text":"$$rse = (100 * SE) / mean)$$ : SE - Standard error mean s - Standard deviation observations n - Number observations","code":""},{"path":"/reference/calculate_sampsize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample size determination — calculate_sampsize","text":"Benedetti, R., Piersimoni, F., & Postiglione, P. (2015). Sampling spatial units agricultural surveys. pp 202-203. Berlin: Springer.","code":""},{"path":[]},{"path":"/reference/calculate_sampsize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample size determination — calculate_sampsize","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/calculate_sampsize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample size determination — calculate_sampsize","text":"","code":"#--- Load raster ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  calculate_sampsize(   mraster = mr,   rse = 0.01,   plot = TRUE ) #> $nSamp #>   nSamp  rse      var #> 1  1394 0.01     zq90 #> 2  1341 0.01 pzabove2 #> 3  1859 0.01      zsd #>  #> $plot  #>   calculate_sampsize(   mraster = mr,   plot = TRUE ) #> $nSamp #>     nSamp   rse      var #> 1    1394 0.010     zq90 #> 2    1155 0.011     zq90 #> 3     973 0.012     zq90 #> 4     830 0.013     zq90 #> 5     717 0.014     zq90 #> 6     625 0.015     zq90 #> 7     550 0.016     zq90 #> 8     488 0.017     zq90 #> 9     435 0.018     zq90 #> 10    391 0.019     zq90 #> 11    353 0.020     zq90 #> 12    320 0.021     zq90 #> 13    292 0.022     zq90 #> 14    267 0.023     zq90 #> 15    246 0.024     zq90 #> 16    226 0.025     zq90 #> 17    209 0.026     zq90 #> 18    194 0.027     zq90 #> 19    181 0.028     zq90 #> 20    168 0.029     zq90 #> 21    157 0.030     zq90 #> 22    148 0.031     zq90 #> 23    138 0.032     zq90 #> 24    130 0.033     zq90 #> 25    123 0.034     zq90 #> 26    116 0.035     zq90 #> 27    110 0.036     zq90 #> 28    104 0.037     zq90 #> 29     98 0.038     zq90 #> 30     93 0.039     zq90 #> 31     89 0.040     zq90 #> 32     85 0.041     zq90 #> 33     81 0.042     zq90 #> 34     77 0.043     zq90 #> 35     74 0.044     zq90 #> 36     70 0.045     zq90 #> 37     67 0.046     zq90 #> 38     65 0.047     zq90 #> 39     62 0.048     zq90 #> 40     59 0.049     zq90 #> 41     57 0.050     zq90 #> 42   1341 0.010 pzabove2 #> 43   1111 0.011 pzabove2 #> 44    935 0.012 pzabove2 #> 45    798 0.013 pzabove2 #> 46    689 0.014 pzabove2 #> 47    601 0.015 pzabove2 #> 48    529 0.016 pzabove2 #> 49    469 0.017 pzabove2 #> 50    418 0.018 pzabove2 #> 51    376 0.019 pzabove2 #> 52    339 0.020 pzabove2 #> 53    308 0.021 pzabove2 #> 54    281 0.022 pzabove2 #> 55    257 0.023 pzabove2 #> 56    236 0.024 pzabove2 #> 57    218 0.025 pzabove2 #> 58    201 0.026 pzabove2 #> 59    187 0.027 pzabove2 #> 60    174 0.028 pzabove2 #> 61    162 0.029 pzabove2 #> 62    151 0.030 pzabove2 #> 63    142 0.031 pzabove2 #> 64    133 0.032 pzabove2 #> 65    125 0.033 pzabove2 #> 66    118 0.034 pzabove2 #> 67    111 0.035 pzabove2 #> 68    105 0.036 pzabove2 #> 69    100 0.037 pzabove2 #> 70     95 0.038 pzabove2 #> 71     90 0.039 pzabove2 #> 72     85 0.040 pzabove2 #> 73     81 0.041 pzabove2 #> 74     78 0.042 pzabove2 #> 75     74 0.043 pzabove2 #> 76     71 0.044 pzabove2 #> 77     68 0.045 pzabove2 #> 78     65 0.046 pzabove2 #> 79     62 0.047 pzabove2 #> 80     59 0.048 pzabove2 #> 81     57 0.049 pzabove2 #> 82     55 0.050 pzabove2 #> 83   1859 0.010      zsd #> 84   1542 0.011      zsd #> 85   1299 0.012      zsd #> 86   1109 0.013      zsd #> 87    958 0.014      zsd #> 88    836 0.015      zsd #> 89    735 0.016      zsd #> 90    652 0.017      zsd #> 91    582 0.018      zsd #> 92    523 0.019      zsd #> 93    472 0.020      zsd #> 94    429 0.021      zsd #> 95    391 0.022      zsd #> 96    358 0.023      zsd #> 97    329 0.024      zsd #> 98    303 0.025      zsd #> 99    280 0.026      zsd #> 100   260 0.027      zsd #> 101   242 0.028      zsd #> 102   225 0.029      zsd #> 103   211 0.030      zsd #> 104   197 0.031      zsd #> 105   185 0.032      zsd #> 106   174 0.033      zsd #> 107   164 0.034      zsd #> 108   155 0.035      zsd #> 109   147 0.036      zsd #> 110   139 0.037      zsd #> 111   132 0.038      zsd #> 112   125 0.039      zsd #> 113   119 0.040      zsd #> 114   113 0.041      zsd #> 115   108 0.042      zsd #> 116   103 0.043      zsd #> 117    98 0.044      zsd #> 118    94 0.045      zsd #> 119    90 0.046      zsd #> 120    86 0.047      zsd #> 121    83 0.048      zsd #> 122    79 0.049      zsd #> 123    76 0.050      zsd #>  #> $plot  #>   calculate_sampsize(   mraster = mr,   rse = 0.025,   start = 0.01,   end = 0.08,   increment = 0.01,   plot = TRUE ) #> 'rse' not perfectly divisible by 'incremenent.  #> Selecting closest sample size (rse = 0.03) based on values. #> $nSamp #> # A tibble: 3 x 3 #> # Groups:   var [3] #>   nSamp   rse var      #>   <dbl> <dbl> <chr>    #> 1   157  0.03 zq90     #> 2   151  0.03 pzabove2 #> 3   211  0.03 zsd      #>  #> $plot  #>   #--- higher variance leads to need for more samples ---#"},{"path":"/reference/extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract — extract","title":"Extract — extract","text":"Extract raster values samples Extract metric raster attributes existing","code":""},{"path":"/reference/extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract — extract","text":"","code":"extract_strata(   sraster,   existing,   data.frame = FALSE,   filename = NULL,   overwrite = FALSE )  extract_metrics(   mraster,   existing,   data.frame = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract — extract","text":"sraster spatRaster. Stratification raster. existing sf. Samples resulting sample_* functions. data.frame Logical. true outputs data.frame filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. mraster Spatraster. Primary covariate raster stratify.","code":""},{"path":"/reference/extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract — extract","text":"sf data.frame object samples strata attributes sf data.frame object samples associated raster cell attributes","code":""},{"path":"/reference/extract_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract metrics — extract_metrics","title":"Extract metrics — extract_metrics","text":"Extract metric values existing samples","code":""},{"path":"/reference/extract_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract metrics — extract_metrics","text":"","code":"extract_metrics(   mraster,   existing,   data.frame = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/extract_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract metrics — extract_metrics","text":"mraster spatRaster. Metrics Raster. existing sf.  Existing plot network. data.frame Logical. Output data.frame TRUE filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists.","code":""},{"path":"/reference/extract_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract metrics — extract_metrics","text":"sf data.frame object samples metrics attributes","code":""},{"path":[]},{"path":"/reference/extract_metrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract metrics — extract_metrics","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/extract_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract metrics — extract_metrics","text":"","code":"#--- Load mraster ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  #' #--- load existing samples ---# e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  extract_metrics(mraster =  mr,                 existing = e) #> Simple feature collection with 100 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>    FID zq90 pzabove2  zsd               geometry #> 1    0 18.6     79.7 4.96 POINT (434970 5343030) #> 2    1 18.2     91.9 3.90 POINT (435590 5340510) #> 3    2 13.5     24.8 4.23 POINT (434290 5338670) #> 4    3 13.8     38.5 3.61 POINT (435170 5340410) #> 5    4 15.5     69.4 4.20 POINT (437550 5340650) #> 6    5 18.2     79.8 5.30 POINT (435850 5340130) #> 7    6 17.9     74.8 5.34 POINT (431630 5343230) #> 8    7 15.4     89.6 3.63 POINT (436510 5340870) #> 9    8 17.2     65.1 4.80 POINT (435990 5339950) #> 10   9 14.4     93.5 3.38 POINT (438250 5337770)"},{"path":"/reference/extract_strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract strata — extract_strata","title":"Extract strata — extract_strata","text":"Extract stratum values existing samples","code":""},{"path":"/reference/extract_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract strata — extract_strata","text":"","code":"extract_strata(   sraster,   existing,   data.frame = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/extract_strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract strata — extract_strata","text":"sraster spatRaster. Stratification raster. existing sf.  Existing plot network. data.frame Logical. Output data.frame TRUE filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists.","code":""},{"path":"/reference/extract_strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract strata — extract_strata","text":"sf data.frame object samples strata attribute","code":""},{"path":[]},{"path":"/reference/extract_strata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract strata — extract_strata","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/extract_strata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract strata — extract_strata","text":"","code":"#--- Load sraster ---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  #--- load existing samples ---# e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  extract_strata(sraster = sr,                existing = e) #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> Projected CRS: UTM Zone 17, Northern Hemisphere #> First 10 features: #>    strata               geometry #> 1       4 POINT (434970 5343030) #> 2       6 POINT (435590 5340510) #> 3       8 POINT (434290 5338670) #> 4       8 POINT (435170 5340410) #> 5       7 POINT (437550 5340650) #> 6       4 POINT (435850 5340130) #> 7       7 POINT (431630 5343230) #> 8       5 POINT (436510 5340870) #> 9       7 POINT (435990 5339950) #> 10      5 POINT (438250 5337770)"},{"path":"/reference/masking.html","id":null,"dir":"Reference","previous_headings":"","what":"Masking — masking","title":"Masking — masking","text":"Create covariate sample matrices","code":""},{"path":"/reference/masking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Masking — masking","text":"","code":"mask_access(raster, access, buff_inner, buff_outer)"},{"path":"/reference/masking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Masking — masking","text":"raster SpatRaster. Raster masked. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled.","code":""},{"path":"/reference/matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrices — matrices","title":"Matrices — matrices","text":"Create covariate sample matrices","code":""},{"path":"/reference/matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrices — matrices","text":"","code":"mat_quant(vals, nQuant, nb)  mat_cov(vals, nQuant, nb, matQ)  mat_covNB(vals, nQuant, nb, matQ)"},{"path":"/reference/matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrices — matrices","text":"vals Covariate / sample data nQuant Number quantiles nb Number bands matQ Quantile matrix","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot — plot","title":"Plot — plot","text":"Plot Class Plot","code":""},{"path":"/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot — plot","text":"","code":"classPlot(dfc, coordsgrps, mraster, mraster2, samp)"},{"path":"/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot — plot","text":"dfc data.frame. Values mraster mraster2 coordsgrps List. Cartesian coordinates strata mraster Spatraster. Primary covariate raster stratify. mraster2 Spatraster. Secondary covariate raster stratify. samp Numeric. Determines proportion cells plot","code":""},{"path":"/reference/sample_ahels.html","id":null,"dir":"Reference","previous_headings":"","what":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Perform adapted Hypercube Evaluation Legacy Sample (ahels) algorithm using existing site data raster metrics. New samples allocated based quantile ratios existing sample covariate dataset.","code":""},{"path":"/reference/sample_ahels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"","code":"sample_ahels(   mraster,   existing,   nQuant = 10,   nSamp = NULL,   threshold = 0.9,   matrices = NULL,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/sample_ahels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"mraster spatRaster. ALS metrics raster. existing sf.  Existing plot network. nQuant Numeric. Number quantiles divide covariates samples . Quantiles cover least 1 percent area interest excluded returned NA. nSamp Numeric. Maximum number new samples allocate. provided, algorithm default allocating number samples provided. threshold Numeric. sample quantile ratio threshold establishing whether additional samples added. default = 0.9. Values close 1 can cause algorithm continually loop used sparingly. matrices List. Quantile covariance matrices generated calculate_pop(mraster = mraster, nQuant = nQuant). mraster & nQuant inputs must supply covariance matrix. Supplying matrix allows users large rasters pre-process covariance matrix avoid longer sampling processing times. plot Logial. Plots existing (circles) new (crosses) samples first band mraster. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc.","code":""},{"path":"/reference/sample_ahels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Returns sf point object existing samples supplemental samples added ahels algorithm.","code":""},{"path":"/reference/sample_ahels.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Messages algorithm state samples added -represented quantiles. number square brackets follow represent matrix row column respectively can printed using details = TRUE. cases, generally single metric used mraster, sampling ratios >= 1  nSamp number samples allocated. algorithm stop case. Special thanks Dr. Brendan Malone original implementation algorithm.","code":""},{"path":"/reference/sample_ahels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Malone BP, Minansy B, Brungard C. 2019. methods improve utility conditioned Latin hypercube sampling. PeerJ 7:e6451 DOI 10.7717/peerj.6451","code":""},{"path":[]},{"path":"/reference/sample_ahels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/sample_ahels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adapted Hypercube Evaluation of a Legacy Sample (ahels) — sample_ahels","text":"","code":"if (FALSE) { #--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e)  sample_ahels(   mraster = mr,   existing = e,   plot = TRUE )  #--- supply quantile and covariance matrices ---# mat <- calculate_pop(mraster = mr)  sample_ahels(   mraster = mr,   existing = e,   matrices = mat,   nSamp = 300,   filename = tempfile(fileext = \".shp\") ) }"},{"path":"/reference/sample_balanced.html","id":null,"dir":"Reference","previous_headings":"","what":"Balanced sampling — sample_balanced","title":"Balanced sampling — sample_balanced","text":"Balanced raster sampling using lcube lpm2_kdtree methods","code":""},{"path":"/reference/sample_balanced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balanced sampling — sample_balanced","text":"","code":"sample_balanced(   mraster,   nSamp,   algorithm = \"lpm2_kdtree\",   p = NULL,   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   plot = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/sample_balanced.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balanced sampling — sample_balanced","text":"mraster spatRaster. ALS metrics raster. nSamp Numeric. Number desired samples. algorithm Character. One lpm2_kdtree, lcube, lcubestratified p Numeric. Vector length equal number cells mraster representing inclusion probability candidate sample. Default = nSamp / N, N number cells. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. plot Logical. Plots output strata raster visualized strata boundary dividers. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc.","code":""},{"path":"/reference/sample_balanced.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balanced sampling — sample_balanced","text":"sf object nSamp randomly sampled points.","code":""},{"path":"/reference/sample_balanced.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Balanced sampling — sample_balanced","text":"Anton Grafstrom Jonathan Lisic (2019). BalancedSampling: Balanced Spatially Balanced Sampling. R package version 1.5.5. https://CRAN.R-project.org/package=BalancedSampling Jonathan Lisic Anton Grafstrom (2018). SamplingBigData: Sampling Methods Big Data. R package version 1.0.0. https://CRAN.R-project.org/package=SamplingBigData Grafström, . Lisic, J (2018). BalancedSampling: Balanced Spatially Balanced Sampling.  R package version 1.5.4. http://www.antongrafstrom.se/balancedsampling","code":""},{"path":[]},{"path":"/reference/sample_balanced.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Balanced sampling — sample_balanced","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/sample_balanced.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balanced sampling — sample_balanced","text":"","code":"if (FALSE) { #--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a)  sample_balanced(   mraster = mr,   nSamp = 200,   plot = TRUE )  sample_balanced(   mraster = mr,   nSamp = 100,   algorithm = \"lcube\",   access = ac,   buff_inner = 50,   buff_outer = 200 ) }"},{"path":"/reference/sample_clhs.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditioned Latin Hypercube Sampling — sample_clhs","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"Conditioned Latin Hypercube Sampling using clhs functionality.","code":""},{"path":"/reference/sample_clhs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"","code":"sample_clhs(   mraster,   nSamp,   iter = 10000,   cost = NULL,   existing = NULL,   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/sample_clhs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"mraster spatRaster. ALS metrics raster. nSamp Numeric. Number desired samples. iter Numeric. Value giving number iterations within Metropolis-Hastings process. cost Numeric/Character. Index name covariate within mraster used constrain cLHS sampling. default - NULL cost constraint used. existing sf.  Existing plot network. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. plot Logical. Plots output strata raster samples. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists. ... Additional arguments clhs sampling. See clhs.","code":""},{"path":"/reference/sample_clhs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"sf object nSamp stratified samples.","code":""},{"path":"/reference/sample_clhs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"Minasny, B. McBratney, .B. 2006. conditioned Latin hypercube method sampling presence ancillary information. Computers Geosciences, 32:1378-1388. Minasny, B. . B. McBratney, .B.. 2010. Conditioned Latin Hypercube Sampling Calibrating Soil Sensor Data Soil Properties. : Proximal Soil Sensing, Progress Soil Science, pages 111-119. Roudier, P., Beaudette, D.E. Hewitt, .E. 2012. conditioned Latin hypercube sampling algorithm incorporating operational constraints. : Digital Soil Assessments Beyond. Proceedings 5th Global Workshop Digital Soil Mapping, Sydney, Australia.","code":""},{"path":[]},{"path":"/reference/sample_clhs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/sample_clhs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditioned Latin Hypercube Sampling — sample_clhs","text":"","code":"#--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  sample_clhs(   mraster = mr,   nSamp = 200,   plot = TRUE,   iter = 100 )  #> Simple feature collection with 200 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431130 ymin: 5337730 xmax: 438530 ymax: 5343230 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        zq90 pzabove2  zsd type               geometry #> 51621 16.80     95.9 3.83  new POINT (432710 5340210) #> 58553 11.70     84.8 3.01  new POINT (436930 5339810) #> 52637 14.10     93.8 2.81  new POINT (432370 5340150) #> 37043 16.80     87.2 4.00  new POINT (437150 5341090) #> 59224 14.70     94.1 3.60  new POINT (431450 5339750) #> 54549 14.40     84.0 3.24  new POINT (436370 5340050) #> 8205   3.41     28.8 0.65  new POINT (435690 5342750) #> 36715 18.70     94.9 3.41  new POINT (437310 5341110) #> 1858  18.70     78.0 4.83  new POINT (438290 5343130) #> 64981 19.00     11.3 6.20  new POINT (434570 5339410)  sample_clhs(   mraster = mr,   nSamp = 400,   existing = e,   iter = 250,   details = TRUE ) #> $clhs #>   [1] 13369 23326 81880  9990 76270 90655 81359  5491 80050 25708 12691 #>  [12]  1305  1979 27615 83348 30278 71169 79335 84523 19026  7376 55749 #>  [23] 87792 47799 19819 17856 31324 11396  5957 22870 46828 90078 75163 #>  [34] 71473 65911 84435  4950 17384 38044 43320 32627  5002 79001 48208 #>  [45] 10058   687 21870  6961 24814 77715 37952 80684 40256 50079 41237 #>  [56] 83146 39792 52113 90949 80445 62146 30902 69968 81799 41828 18346 #>  [67] 13864 73829  6710 26305 27097 53419 63312  6612 25075 45551 85145 #>  [78] 51265 27674 68634 45609 85776 70777 86524 75259 85180 45273 48924 #>  [89] 32265 52834 40729 26151 22629 71867  7247 55231 33326 16797 90644 #> [100] 63505 55037 86903  4322 81773 69698  7293 68097 39446 25163 35274 #> [111] 21991 70653  5665 51893 27425 75927 63250 35442 62292 54172 25486 #> [122] 90200 12740 66581 20438  4270 76104 44048  9235 81363 58039 55958 #> [133] 19220 11355 14308 46944 52892 53710 87887 43645  5053 85048 59395 #> [144] 87658 66702 55684 77574  6425 77280 72487 65371  4611 83921 41415 #> [155] 81413 63137 55123  9701 69488 68255 82563 67060 47511  5840 59647 #> [166] 19496 42910 76987 12961 72168  4569 32432 58554 86935 49565 46173 #> [177] 28247  7423 21028 42333 55472 58604 38453 59703 25000 17943 76084 #> [188]  7835 20448 84345 31044 13922 64964 35327 75502 67918 16793 62035 #> [199] 82540 24578 59175 34011 51904 32915 54294 36568 59767  4658 39175 #> [210] 34527  8878 23752 60831 19985 46252  4507 73094 76978 68904 68184 #> [221] 42341 40983 83540 15693 67791 46341  4341  8301 66226 45045 85292 #> [232] 64323 87556 63506 67578 64722 65683 13325 74528 63027 87061 45423 #> [243] 79856 53038 90263 49776 44671 57290 15918 87264 26823 60734 46706 #> [254] 25547 18577 46355 61634 62549 52420 33517 88986 77259 67845 15606 #> [265] 57005 20951 86577 72371 37200 71569 37793 61427 24242  6351 65974 #> [276] 64764 78164 41988 89021 77821 82823  3954 40596 23479 64679 24803 #> [287] 46220 50714 77216 83906  6211 87202 42033 28271 37787 87628 54620 #> [298] 77214 37393  8566 89123 55380 32970  6567 45614 25537 74083 28331 #> [309]  2630 67399 16397 25282 61180 50550 38431 22264 78819  8595 14797 #> [320] 48502 58836 76614 89790 89249  3050 10577 73755 44517 29508 51425 #> [331] 21347 82081 45793 74768 22061 84377 33033 90023 28493 75388  2268 #> [342]  3095 52290   839 38710 72341 86744 17154 34486 72967 42641 18040 #> [353] 51457  1231 87254 31920 71960 86115 36671 85835 64215 29068 80458 #> [364] 43678 15059  8287 19239 38184 51465 43383 32375 72628 65406 13053 #> [375] 81706 66852 75944 10843  6848 73257 25292 84892 11517 40999 82348 #> [386] 76462 13595 63911 87896  9156  6398 57010 83959 19814 70863 87741 #> [397] 10208 58357 54483 64594 #>  #> $samples #> Simple feature collection with 400 features and 4 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431150 ymin: 5337710 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>        zq90 pzabove2  zsd type               geometry #> 13269  3.68      6.4 0.73  new POINT (437850 5342450) #> 23226 15.10     90.1 3.57  new POINT (436030 5341890) #> 81780 19.90     97.0 4.80  new POINT (431230 5338210) #> 9890   7.70     17.9 2.00  new POINT (434170 5342650) #> 76170  8.24     39.6 2.16  new POINT (437710 5338570) #> 90555 24.30     89.7 7.21  new POINT (432950 5337730) #> 81259 18.60     89.1 3.89  new POINT (435010 5338250) #> 5391   2.14      0.7 0.26  new POINT (437630 5342910) #> 79950  9.21     43.1 2.40  new POINT (436610 5338330) #> 25608  2.35      8.7 0.31  new POINT (435510 5341750) #>"},{"path":"/reference/sample_srs.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple random sampling — sample_srs","title":"Simple random sampling — sample_srs","text":"Randomly sample within stratification raster extent.","code":""},{"path":"/reference/sample_srs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple random sampling — sample_srs","text":"","code":"sample_srs(   raster,   nSamp,   mindist = NULL,   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   plot = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/sample_srs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple random sampling — sample_srs","text":"raster spatRaster. Raster used random sampling. nSamp Numeric. Number desired samples. mindist Numeric. Minimum allowable distance selected samples. Default = NULL. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. plot Logical. Plots output strata raster samples. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists.","code":""},{"path":"/reference/sample_srs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple random sampling — sample_srs","text":"sf object nSamp randomly sampled points.","code":""},{"path":[]},{"path":"/reference/sample_srs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simple random sampling — sample_srs","text":"Tristan R.H. Goodbody & Martin Queinnec","code":""},{"path":"/reference/sample_srs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple random sampling — sample_srs","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  #--- perform simple random sampling ---# sample_srs(   raster = sr,   nSamp = 200, ) #> Simple feature collection with 200 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343210 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (432350 5338490) #> 2  POINT (432350 5338490) #> 3  POINT (434270 5343110) #> 4  POINT (438030 5339650) #> 5  POINT (434730 5342470) #> 6  POINT (436510 5338090) #> 7  POINT (435550 5339690) #> 8  POINT (432730 5341650) #> 9  POINT (434330 5341570) #> 10 POINT (433630 5341270)"},{"path":"/reference/sample_strat.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified sampling — sample_strat","title":"Stratified sampling — sample_strat","text":"Sampling based stratified raster.","code":""},{"path":"/reference/sample_strat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified sampling — sample_strat","text":"","code":"sample_strat(   sraster,   nSamp,   allocation = \"prop\",   force = FALSE,   mraster = NULL,   mindist = NULL,   existing = NULL,   include = FALSE,   remove = FALSE,   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   wrow = 3,   wcol = 3,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE )"},{"path":"/reference/sample_strat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratified sampling — sample_strat","text":"sraster spatRaster. Stratification raster used sampling. nSamp Numeric. Number desired samples. existing include force influence value. allocation Character. Allocation algorithm used. Either prop (default) proportional allocation optim optimal allocation (equal sampling cost) equal equal number samples (defined nSamp)  strata. force Logical. Default = FALSE - force nSamp exactly user defined value cases nSamp sraster strata count equally divisible. Additional samples often need allocated removed based rounding differences resulting proportional differences nSamp strata coverages sraster. instances samples either added strata lowest number samples removed strata highest number samples. effect existing provided. mraster spatRaster. ALS metric raster. Required allocation = optim. mindist Numeric. Minimum allowable distance selected samples. Default = NULL. existing sf data.frame.  Existing plot network. include Logical. TRUE include existing plots nSamp total. remove Logical. TRUE randomly remove samples represented strata meet allocated sample numbers. Used existing include TRUE. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. wrow Numeric. Number row focal window (default 3). wcol Numeric. Number columns focal window (default 3). plot Logical. Plots existing (circles) new (crosses) samples. details Logical. FALSE (default) output sf object stratified samples. TRUE return list $details additional sampling information $raster sf object stratified samples. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists.","code":""},{"path":"/reference/sample_strat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratified sampling — sample_strat","text":"sf object nSamp stratified samples.","code":""},{"path":"/reference/sample_strat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Stratified sampling — sample_strat","text":"sampling performed 2 stages: Rule 1 - Sample within grouped stratum pixels defined within wrow, wcol parameters Rule 2 - samples exist satisfy Rule 1  individual stratum pixels sampled. rule applied allocate sample defined rule attribute output samples.","code":""},{"path":"/reference/sample_strat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stratified sampling — sample_strat","text":"Queinnec, M., White, J. C., & Coops, N. C. (2021). Comparing airborne spaceborne photon-counting LiDAR canopy structural estimates across different boreal forest types. Remote Sensing Environment, 262 (August 2020), 112510. https://doi.org/10.1016/j.rse.2021.112510","code":""},{"path":[]},{"path":"/reference/sample_strat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stratified sampling — sample_strat","text":"Tristan R.H. Goodbody & Martin Queinnec","code":""},{"path":"/reference/sample_strat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratified sampling — sample_strat","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)   #--- perform stratified sampling random sampling ---# sraster <- sample_strat(   sraster = sr,   nSamp = 50,   plot = TRUE ) #> Implementing porportional allocation of samples #> nSamp of 50 is not perfectly divisible based on strata distribution. nSamp of 56 will be returned. Use \"force = TRUE\" to brute force to 50. #> Processing strata : 1 #> Processing strata : 2 #> Processing strata : 3 #> Processing strata : 4 #> Processing strata : 5 #> Processing strata : 6 #> Processing strata : 7 #> Processing strata : 8 #> Processing strata : 9 #> Processing strata : 10"},{"path":"/reference/sample_systematic.html","id":null,"dir":"Reference","previous_headings":"","what":"Systematic sampling — sample_systematic","title":"Systematic sampling — sample_systematic","text":"Systematic sampling within square hexagonal tessellation.","code":""},{"path":"/reference/sample_systematic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Systematic sampling — sample_systematic","text":"","code":"sample_systematic(   raster,   cellsize,   square = TRUE,   location = \"centers\",   forceSamp = FALSE,   access = NULL,   buff_inner = NULL,   buff_outer = NULL,   plot = FALSE,   filename = NULL,   overwrite = FALSE,   details = FALSE,   ... )"},{"path":"/reference/sample_systematic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Systematic sampling — sample_systematic","text":"raster spatRaster. Raster used define extent fishnet grid. cellsize Numeric. Desired cellsize tessellation. square Logical. Tessellation shape. Default regular square grid, FALSE hexagons returned. location Character. Sample location within tessellation. Default (\"centers\") returns samples tessellation centers, \"corners\" - corners returned, \"random\" - samples randomly located within tessellations. forceSamp Logical. applies location = \"random\". TRUE, random samples forced fall areas raster NA values. considerably slow processing. access sf. Road access network - must lines. buff_inner Numeric. Inner buffer boundary specifying distance access plots sampled. buff_outer Numeric. Outer buffer boundary specifying distance access plots can sampled. plot Logical. Plots output strata raster samples. filename Character. Path write output samples. overwrite Logical. Choice overwrite existing filename exists. details Logical. FALSE (default) output sf object systematic samples. TRUE returns list sf objects tessellation tessellation grid sampling, samples systematic samples. ... Additional arguments st_make_grid. Options include offset  offset grid providing lower left coordinates.","code":""},{"path":"/reference/sample_systematic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Systematic sampling — sample_systematic","text":"sf object sampled points tessellation.","code":""},{"path":"/reference/sample_systematic.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Systematic sampling — sample_systematic","text":"Specifying location = \"random\" can result tessellations samples. results raster NA values random location chosen. Using forceSamp = TRUE removes areas NA sampling entirely, considerably slows processing speeds.","code":""},{"path":[]},{"path":"/reference/sample_systematic.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Systematic sampling — sample_systematic","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/sample_systematic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Systematic sampling — sample_systematic","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sr <- terra::rast(r)  a <- system.file(\"extdata\", \"roads.shp\", package = \"sgsR\") ac <- sf::st_read(a) #> Reading layer `roads' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\roads.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 167 features and 2 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  e <- system.file(\"extdata\", \"existing.shp\", package = \"sgsR\") e <- sf::st_read(e) #> Reading layer `existing' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\existing.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 1 field #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431110 ymin: 5337750 xmax: 438550 ymax: 5343230 #> CRS:           unknown  #--- perform grid sampling ---# sample_systematic(   raster = sr,   cellsize = 1000,   plot = TRUE )  #> Simple feature collection with 40 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431600 ymin: 5338200 xmax: 437600 ymax: 5343200 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431600 5338200) #> 2  POINT (432600 5338200) #> 3  POINT (433600 5338200) #> 4  POINT (434600 5338200) #> 5  POINT (435600 5338200) #> 6  POINT (436600 5338200) #> 7  POINT (437600 5338200) #> 8  POINT (432600 5339200) #> 9  POINT (433600 5339200) #> 10 POINT (434600 5339200)  sample_systematic(   raster = sr,   cellsize = 1000,   square = FALSE,   location = \"corners\",   plot = TRUE )  #> Simple feature collection with 312 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337989 xmax: 438100 ymax: 5343185 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                  geometry #> 1  POINT (431100 5338855) #> 2  POINT (431100 5338277) #> 3  POINT (431100 5340587) #> 4  POINT (431100 5340009) #> 5  POINT (431100 5342319) #> 6  POINT (431100 5338277) #> 7  POINT (431600 5337989) #> 8  POINT (431100 5338855) #> 9  POINT (431100 5340009) #> 10 POINT (431600 5339721)  sample_systematic(   raster = sr,   cellsize = 1000,   square = FALSE,   location = \"random\" ) #> Simple feature collection with 40 features and 0 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 431120.5 ymin: 5338060 xmax: 438537.4 ymax: 5343098 #> CRS:           +proj=utm +zone=17 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs #> First 10 features: #>                    geometry #> 1  POINT (431276.8 5339625) #> 2  POINT (431120.5 5340905) #> 3  POINT (431339.3 5338312) #> 4  POINT (431262.2 5340223) #> 5  POINT (431953.4 5341835) #> 6    POINT (432296 5341550) #> 7  POINT (431655.8 5342808) #> 8  POINT (432723.5 5338235) #> 9  POINT (432459.4 5340292) #> 10   POINT (432258 5342279)"},{"path":"/reference/sgsR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sgsR: Structurally Guided Sampling in R — sgsR-package","title":"sgsR: Structurally Guided Sampling in R — sgsR-package","text":"Functions enable structurally guided sampling (SGS) approaches using airborne laser scanning (ALS; LIDAR) data. Primary functions provide means generate data-driven stratifications & samples. Intermediate functions calculating extracting important information input covariates samples also included. Processing outcomes intended help forest environmental management practitioners better optimize field sample placement well assess augment existing sample networks context structural conditions. ALS data primary intended use case, however rasterized remote sensing data can used, enabling data-driven stratifications sampling approaches.","code":""},{"path":[]},{"path":"/reference/sgsR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sgsR: Structurally Guided Sampling in R — sgsR-package","text":"Maintainer: Tristan RH Goodbody goodbody.t@gmail.com (ORCID) [copyright holder] Authors: Nicholas C Coops nicholas.coops@ubc.ca (ORCID) Martin Queinnec queinnec@mail.ubc.ca (ORCID)","code":""},{"path":"/reference/strat_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Breaks stratification — strat_breaks","title":"Breaks stratification — strat_breaks","text":"Stratify metrics raster using user defined breaks","code":""},{"path":"/reference/strat_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breaks stratification — strat_breaks","text":"","code":"strat_breaks(   mraster,   mraster2 = NULL,   breaks,   breaks2 = NULL,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Breaks stratification — strat_breaks","text":"mraster Spatraster. Primary covariate raster stratify. mraster2 Spatraster. Secondary covariate raster stratify. breaks Numeric. Vector breakpoints mraster breaks2 Numeric. Vector breakpoints mraster2 (provided) plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Breaks stratification — strat_breaks","text":"Returns output stratification spatRaster list details = TRUE. list returned: details list output prcomp function raster stratified spatRaster based quantiles plot ggplot histogram object showing distribution break points.","code":""},{"path":[]},{"path":"/reference/strat_breaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Breaks stratification — strat_breaks","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_breaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Breaks stratification — strat_breaks","text":"","code":"#--- Load raster ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  #--- create vector breaks ---# br.max <- c(3, 5, 11, 18) br.sd <- c(1, 2, 5)  strat_breaks(   mraster = mr$zq90,   breaks = br.max,   plot = TRUE,   details = TRUE )   #> $details #> $details$breaks #> [1]  3  5 11 18 #>  #> $details$breaks2 #> NULL #>  #>  #> $raster #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      5  #>  #> $plot #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.  #>   strat_breaks(   mraster = mr$zq90,   mraster2 = mr$zsd,   breaks = br.max,   breaks2 = br.sd,   plot = TRUE )   #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     17"},{"path":"/reference/strat_kmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"k-means stratification — strat_kmeans","title":"k-means stratification — strat_kmeans","text":"Stratify metrics raster using kmeans algorithm","code":""},{"path":"/reference/strat_kmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k-means stratification — strat_kmeans","text":"","code":"strat_kmeans(   mraster,   nStrata,   iter = 500,   algorithm = \"Lloyd\",   center = TRUE,   scale = TRUE,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_kmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k-means stratification — strat_kmeans","text":"mraster spatRaster. ALS metrics raster. nStrata Character. Number desired strata. iter Numeric. maximum number iterations allowed. algorithm Character. Lloyd (default) MacQueen algorithms. center Logical. Value indicating whether variables shifted zero centered. scale Logical. Value indicating whether variables scaled unit variance plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_kmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"k-means stratification — strat_kmeans","text":"output stratification spatRaster, list details = TRUE.","code":""},{"path":[]},{"path":"/reference/strat_kmeans.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"k-means stratification — strat_kmeans","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_kmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"k-means stratification — strat_kmeans","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  #--- perform stratification using k-means ---# kmeans <- strat_kmeans(   mraster = mr,   nStrata = 5 ) #> K-means being performed on 3 layers with 5 centers.  kmeans <- strat_kmeans(   mraster = mr,   nStrata = 5,   iter = 1000,   algorithm = \"MacQueen\",   plot = TRUE,   details = TRUE ) #> K-means being performed on 3 layers with 5 centers.   kmeans <- strat_kmeans(   mraster = mr,   nStrata = 5,   iter = 1000,   plot = TRUE,   filename = tempfile(fileext = \".tif\"),   overwrite = TRUE ) #> K-means being performed on 3 layers with 5 centers."},{"path":"/reference/strat_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map 2 stratified rasters — strat_map","title":"Map 2 stratified rasters — strat_map","text":"Map stratified rasters combined stratification.","code":""},{"path":"/reference/strat_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map 2 stratified rasters — strat_map","text":"","code":"strat_map(   sraster,   sraster2,   stack = FALSE,   filename = NULL,   overwrite = FALSE,   plot = FALSE,   details = FALSE,   ... )"},{"path":"/reference/strat_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map 2 stratified rasters — strat_map","text":"sraster spatRaster. Primary stratification raster. sraster2 spatRaster. Secondary stratification raster. stack Logical. Default = FALSE. TRUE, output raster 3 layers: strata, strata2, stratamapped. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output mapped stratified spatRaster object. TRUE return list $outRaster mapped stratified raster, $lookUp lookup table stratification. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map 2 stratified rasters — strat_map","text":"spatRaster object.","code":""},{"path":"/reference/strat_map.html","id":"mapping","dir":"Reference","previous_headings":"","what":"Mapping","title":"Map 2 stratified rasters — strat_map","text":"mapping algorithm take stratification sraster combine overlying strata values sraster2. result stratamapped attribute values inputs combined. .e. strata = 1 strata2 = 1 stratamapped = 11. strata = 2 strata2 = 14 stratamapped = 214.","code":""},{"path":[]},{"path":"/reference/strat_map.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Map 2 stratified rasters — strat_map","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map 2 stratified rasters — strat_map","text":"","code":"#--- load input metrics raster ---# raster <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") srasterkmeans <- terra::rast(raster)  #--- read polygon coverage ---# poly <- system.file(\"extdata\", \"inventory_polygons.shp\", package = \"sgsR\") fri <- sf::st_read(poly) #> Reading layer `inventory_polygons' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\inventory_polygons.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 632 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  #--- stratify polygon coverage ---# #--- specify polygon attribute to stratify ---#  attribute <- \"NUTRIENTS\"  #--- specify features within attribute & how they should be grouped ---# #--- as a single vector ---#  features <- c(\"poor\", \"rich\", \"medium\")  srasterfri <- strat_poly(   poly = fri,   attribute = attribute,   features = features,   raster = srasterkmeans,   plot = TRUE )   #--- map srasters ---# strat_map(   sraster = srasterfri,   sraster2 = srasterkmeans,   plot = TRUE )  #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :     11  #> max value   :    310   strat_map(   sraster = srasterfri,   sraster2 = srasterkmeans,   stack = TRUE,   details = TRUE,   plot = TRUE ) #> Stacking sraster, sraster2, and their combination (stratamapped).  #> $outRaster #> class       : SpatRaster  #> dimensions  : 277, 373, 3  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> sources     : memory   #>               kmeans.tif   #>               memory   #> names       : strata, strata2, stratamapped  #> min values  :      1,       1,           11  #> max values  :      3,      10,          310  #>  #> $lookUp #>    strata strata2 stratamapped #> 1       3       2           32 #> 2       3       8           38 #> 3       3       7           37 #> 4       3       5           35 #> 5       1       4           14 #> 6       1       1           11 #> 7       1       3           13 #> 8       1       6           16 #> 9       1      10          110 #> 10      3       4           34 #> 11      3       6           36 #> 12      3       1           31 #> 13      1       7           17 #> 14      1       5           15 #> 15      1       9           19 #> 16      1       8           18 #> 17      1       2           12 #> 18      2       8           28 #> 19      2       7           27 #> 20      2      10          210 #> 21      2       4           24 #> 22      2       5           25 #> 23      2       2           22 #> 24      3       3           33 #> 25      3      10          310 #> 26      3       9           39 #> 27      2       6           26 #> 28      2       3           23 #> 29      2       1           21 #> 30      2       9           29 #>"},{"path":"/reference/strat_osb.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine optimum sample boundaries — strat_osb","title":"Determine optimum sample boundaries — strat_osb","text":"Determine optimum sample boundaries algorithm univariate populations using strata.data algorithm.","code":""},{"path":"/reference/strat_osb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine optimum sample boundaries — strat_osb","text":"","code":"strat_osb(   mraster,   nStrata,   nSamp,   subset = 1,   plot = FALSE,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_osb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine optimum sample boundaries — strat_osb","text":"mraster spatRaster. ALS metrics raster. nStrata Numeric. Number desired output strata. nSamp Numeric. Number desired samples - used within OSB algorithm help determine break points. subset Numeric. Value 0 1 (default) denoting proportion data use determine optimum sample boundaries. plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_osb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine optimum sample boundaries — strat_osb","text":"Returns output stratification spatRaster list details = TRUE. list returned: details list output strata.data function OSB optimum stratum boundaries nh optimum sample sizes stratum. osb vector optimum stratum boundaries. breaks matrix associated metric strata break values. raster stratified spatRaster based OSB.","code":""},{"path":"/reference/strat_osb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determine optimum sample boundaries — strat_osb","text":"Khan, E. ., Khan, M. G. M., & Ahsan, M. J. (2002). Optimum Stratification: Mathematical Programming Approach. Calcutta Statistical Association Bulletin, 52(1–4), 323–334. https://doi.org/10.1177/0008068320020518 Khan, M. G. M., Nand, N., & Ahmad, N. (2008). Determining optimum strata boundary points using dynamic programming. Survey methodology, 34(2), 205-214. M.G.M. Khan, K.G. Reddy & D.K. Rao (2015) Designing stratified sampling economic business surveys, Journal Applied Statistics, 42:10, 2080-2099, DOI: 10.1080/02664763.2015.1018674","code":""},{"path":[]},{"path":"/reference/strat_osb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Determine optimum sample boundaries — strat_osb","text":"Tristan R.H. Goodbody","code":""},{"path":[]},{"path":"/reference/strat_pcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal components stratification — strat_pcomp","title":"Principal components stratification — strat_pcomp","text":"Stratify metrics raster using principal components quantile breaks","code":""},{"path":"/reference/strat_pcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal components stratification — strat_pcomp","text":"","code":"strat_pcomp(   mraster,   nStrata,   nStrata2 = NULL,   center = TRUE,   scale = TRUE,   plot = FALSE,   samp = 1,   details = FALSE,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_pcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal components stratification — strat_pcomp","text":"mraster Spatraster. Covariate raster stratify. nStrata Numeric. Number strata primary principal component. nStrata2 Numeric. Number strata secondary principal component. center Logical. Value indicating whether variables shifted zero centered. scale Logical. Value indicating whether variables scaled unit variance plot Logical. Plots output strata raster visualized strata boundary dividers. samp Numeric. Proportion raster cells plot 0-1. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments passed prcomp.","code":""},{"path":"/reference/strat_pcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal components stratification — strat_pcomp","text":"Returns output stratification spatRaster list details = TRUE. list returned: details list output prcomp function raster stratified spatRaster based PCA plot ggplot scatter plot object strata colour coded strata boundaries delineated","code":""},{"path":[]},{"path":"/reference/strat_pcomp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Principal components stratification — strat_pcomp","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_pcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal components stratification — strat_pcomp","text":"","code":"#--- Load raster and access files ---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  strat_pcomp(   mraster = mr,   nStrata = 5,   plot = TRUE )  #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      5   strat_pcomp(   mraster = mr,   nStrata = 4,   nStrata2 = 4,   plot = TRUE,   details = TRUE )  #> $details #> Standard deviations (1, .., p=9): #> [1] 2.66328897 1.09805898 0.66339469 0.41858538 0.22109594 0.14478794 #> [7] 0.09669328 0.07739106 0.02581106 #>  #> Rotation (n x k) = (9 x 9): #>                PC1         PC2         PC3         PC4         PC5 #> zmax     0.3718561  0.05890652  0.13655303  0.18644188 -0.02967021 #> zmean    0.2892076  0.11179079 -0.94037185  0.11669464 -0.01101177 #> zsd      0.2902484 -0.57132611  0.07358411 -0.03485495 -0.12710815 #> pzabove2 0.2762415  0.57389014  0.11046261 -0.48982874 -0.53278380 #> zq20     0.3222793  0.42913513  0.17765055  0.04688184  0.69772164 #> zq50     0.3621931  0.06711670  0.16260903  0.50497308 -0.03554264 #> zq70     0.3669446 -0.07622676  0.13483825  0.33474905 -0.33679147 #> zq90     0.3576125 -0.24286784  0.04467110 -0.28486752  0.00494469 #> zq95     0.3463317 -0.27351876 -0.03548477 -0.50997312  0.31217248 #>                   PC6          PC7         PC8          PC9 #> zmax     -0.022902433  0.058181544  0.12813760 -0.885232514 #> zmean     0.061423536  0.005559276 -0.04493042  0.001085691 #> zsd       0.373461072 -0.062831197 -0.65029797 -0.015746780 #> pzabove2  0.007219003  0.005909104 -0.23569527  0.052045306 #> zq20      0.371793616 -0.128585416 -0.12943905  0.141020587 #> zq50     -0.525190662  0.398814446 -0.24627692  0.293390931 #> zq70      0.136444231 -0.587797301  0.42249155  0.270652072 #> zq90      0.287643242  0.607152727  0.49439800  0.184814994 #> zq95     -0.583751620 -0.320739852  0.05279230  0.005601089 #>  #> $raster #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     16  #>  #> $plot  #>   strat_pcomp(   mraster = mr,   nStrata = 3,   nStrata2 = 3,   filename = tempfile(fileext = \".tif\") ) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      9"},{"path":"/reference/strat_poly.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratify using polygons — strat_poly","title":"Stratify using polygons — strat_poly","text":"Stratify based polygon coverage attributes features.","code":""},{"path":"/reference/strat_poly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratify using polygons — strat_poly","text":"","code":"strat_poly(   poly,   attribute,   features,   raster,   filename = NULL,   overwrite = FALSE,   plot = FALSE,   details = FALSE,   ... )"},{"path":"/reference/strat_poly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratify using polygons — strat_poly","text":"poly sf. Input polygon coverage. e.g. - forest resources inventory coverage. attribute Character. Name attribute within poly stratified features vector/list. Vector list vectors features within attribute guide stratification. raster spatRaster. Raster template enable polygon raster conversion. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. plot Logical. Plots output spatRaster. details Logical. FALSE (default) output spatRaster object stratified polygon attributes. TRUE return list $outRaster stratified attributes, $lookUp lookup table stratification, poly defined polygon attribute corresponding features / strata ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_poly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratify using polygons — strat_poly","text":"spatRaster object.","code":""},{"path":[]},{"path":"/reference/strat_poly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stratify using polygons — strat_poly","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_poly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stratify using polygons — strat_poly","text":"","code":"#--- load input metrics raster ---# raster <- system.file(\"extdata\", \"kmeans.tif\", package = \"sgsR\") sraster <- terra::rast(raster)  #--- read polygon coverage ---# poly <- system.file(\"extdata\", \"inventory_polygons.shp\", package = \"sgsR\") fri <- sf::st_read(poly) #> Reading layer `inventory_polygons' from data source  #>   `C:\\Users\\goodb\\Documents\\R\\win-library\\4.1\\sgsR\\extdata\\inventory_polygons.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 632 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 431100 ymin: 5337700 xmax: 438560 ymax: 5343240 #> Projected CRS: UTM_Zone_17_Northern_Hemisphere  #--- stratify polygon coverage ---# #--- specify polygon attribute to stratify ---#  attribute <- \"NUTRIENTS\"  #--- specify features within attribute & how they should be grouped ---# #--- as a single vector ---#  features <- c(\"poor\", \"rich\", \"medium\")  srasterpoly <- strat_poly(   poly = fri,   attribute = attribute,   features = features,   raster = sraster,   plot = TRUE )   #--- or as multiple lists ---#  g1 <- \"poor\" g2 <- c(\"rich\", \"medium\")  features <- list(g1, g2)  srasterpoly <- strat_poly(   poly = fri,   attribute = attribute,   features = features,   raster = sraster,   plot = TRUE,   details = TRUE )"},{"path":"/reference/strat_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantiles stratification — strat_quantiles","title":"Quantiles stratification — strat_quantiles","text":"Stratify metric raster using metric quantiles.","code":""},{"path":"/reference/strat_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantiles stratification — strat_quantiles","text":"","code":"strat_quantiles(   mraster,   mraster2 = NULL,   nStrata,   nStrata2 = NULL,   plot = FALSE,   details = FALSE,   samp = 1,   filename = NULL,   overwrite = FALSE,   ... )"},{"path":"/reference/strat_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantiles stratification — strat_quantiles","text":"mraster spatRaster. ALS metrics raster. mraster2 Spatraster. Secondary covariate raster stratify. nStrata Numeric. Number quantiles stratify primary covariate. nStrata2 Numeric. Number quantiles stratify secondary covariate. plot Logical. Plots output strata raster visualized strata boundary dividers. details Logical. FALSE (default) output  stratification raster. TRUE return list $details additional stratification information  $raster output stratification spatRaster.  @param ... Additional arguments passed kmeans function. samp Numeric. Determines proportion cells plot scatterplot (default = 1). Lower values reduce visualization time. filename Character. Path write stratified raster disc. overwrite Logical. Specify whether filename overwritten disc. ... Additional arguments writing files. See writeRaster.","code":""},{"path":"/reference/strat_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantiles stratification — strat_quantiles","text":"Returns output stratification spatRaster list details = TRUE. list returned: details list output prcomp function raster stratified spatRaster based quantiles plot ggplot histogram / scatter plot object (depends whether metric2 supplied). Histogram shows distribution break points scatter plot shows colour coded strata boundaries.","code":""},{"path":[]},{"path":"/reference/strat_quantiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quantiles stratification — strat_quantiles","text":"Tristan R.H. Goodbody","code":""},{"path":"/reference/strat_quantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantiles stratification — strat_quantiles","text":"","code":"#--- Load raster and existing plots---# r <- system.file(\"extdata\", \"wall_metrics.tif\", package = \"sgsR\") mr <- terra::rast(r)  strat_quantiles(   mraster = mr$zq90,   nStrata = 4,   plot = TRUE ) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.   #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :      4   strat_quantiles(   mraster = mr$zq90,   mraster2 = mr$zsd,   nStrata = 3,   nStrata2 = 4 ) #> class       : SpatRaster  #> dimensions  : 277, 373, 1  (nrow, ncol, nlyr) #> resolution  : 20, 20  (x, y) #> extent      : 431100, 438560, 5337700, 5343240  (xmin, xmax, ymin, ymax) #> coord. ref. : UTM Zone 17, Northern Hemisphere  #> source      : memory  #> name        : strata  #> min value   :      1  #> max value   :     12"},{"path":"/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way. enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions). simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[. Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround. Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually : Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"/news/index.html","id":"sgsr-012","dir":"Changelog","previous_headings":"","what":"sgsR 0.1.2","title":"sgsR 0.1.2","text":"Removed dependencies stringr, tidyselect, rlang, RColorBrewer, magrittr, glue, Rcpp Improved documentation examples read speeds line <5 seconds CRAN submission","code":""},{"path":"/news/index.html","id":"sgsr-011","dir":"Changelog","previous_headings":"","what":"sgsR 0.1.1","title":"sgsR 0.1.1","text":"Added NEWS.md file track changes package.","code":""}]
